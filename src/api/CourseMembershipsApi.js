/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body38 from '../model/Body38';
import Body39 from '../model/Body39';
import CourseMembership from '../model/CourseMembership';
import InlineResponse20024 from '../model/InlineResponse20024';
import InlineResponse20025 from '../model/InlineResponse20025';
import RestException from '../model/RestException';

/**
* CourseMemberships service.
* @module api/CourseMembershipsApi
* @version 3900.6.0
*/
export default class CourseMembershipsApi {

    /**
    * Constructs a new CourseMembershipsApi. 
    * @alias module:api/CourseMembershipsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdUsersGet operation.
     * @callback module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20024} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Course Memberships
     * Returns a list of user memberships for the specified course or organization.  Callers not enrolled in the course must have at least one of the following entitlements:  - For courses: &#x27;course.user.VIEW&#x27;, &#x27;system.user.course.enrollment.VIEW&#x27;, or &#x27;system.courseuserlist.VIEW&#x27; - For organizations: &#x27;course.user.VIEW&#x27;, &#x27;system.user.org.enrollment.VIEW&#x27;, or &#x27;system.orguserlist.VIEW&#x27; Callers enrolled in the course will only be able to see memberships that are available and that have opted to be included in the course roster.  For callers enrolled in the course as well as those with the &#x27;course.user.VIEW&#x27; entitlement, system fields such as externalId and dataSourceId will not be visible.  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20024}
     */
    learnApiPublicV1CoursesCourseIdUsersGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'role': opts['role'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'dataSourceId': opts['dataSourceId'],
        'lastAccessed': opts['lastAccessed'],
        'lastAccessedCompare': opts['lastAccessedCompare'],
        'availability.available': opts['availabilityAvailable'],
        'sort': opts['sort'],
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20024;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdUsersUserIdDelete operation.
     * @callback module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Membership
     * Deletes a user membership from the specified course.  Required entitlements:  - For courses: &#x27;system.enrollment.DELETE&#x27; or &#x27;course.user.DELETE&#x27; - For organizations: &#x27;system.enrollment.DELETE&#x27; or &#x27;org.enrollment.DELETE&#x27;  **Since**: 2015.11.0
     * @param {module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdUsersUserIdDelete(courseId, userId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/users/{userId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdUsersUserIdGet operation.
     * @callback module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMembership} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Membership
     * Loads a user membership in the specified course.  Entitlement and field visibility rules are the same as those when loading the memberships collection.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMembership}
     */
    learnApiPublicV1CoursesCourseIdUsersUserIdGet(courseId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CourseMembership;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdUsersUserIdPatch operation.
     * @callback module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMembership} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Membership
     * Updates a user membership in the specified course.    | Field                  | Entitlements Required                                                           |  |------------------------|---------------------------------------------------------------------------------|  | dataSourceId           | &#x27;course.user.MODIFY&#x27; or &#x27;org.user.MODIFY&#x27;                                       |  | childCourseId          | &#x27;course.user.MODIFY&#x27; or &#x27;org.user.MODIFY&#x27;                                       |  | courseRoleId           | &#x27;course.user.MODIFY&#x27;, &#x27;org.user.MODIFY&#x27;, or &#x27;course.user-role.MODIFY&#x27;           |  | availability.available | &#x27;course.user.MODIFY&#x27;, &#x27;org.user.MODIFY&#x27;, or &#x27;course.course-availability.MODIFY&#x27; |    In addition, callers must have standard view entitlements to receive a response.  Without view entitlements the operation will be performed but an empty result object will be returned.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMembership}
     */
    learnApiPublicV1CoursesCourseIdUsersUserIdPatch(body, courseId, userId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CourseMembership;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/users/{userId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdUsersUserIdPut operation.
     * @callback module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMembership} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Membership
     * Creates a user membership in the specified course.  Minimal entitlements required:  - For courses: &#x27;course.user-enroll.EXECUTE&#x27;, &#x27;system.enrollment.CREATE&#x27; - For organizations: &#x27;course.user-enroll.EXECUTE&#x27;, &#x27;org.enrollment.CREATE&#x27; - For courses or organizations that have enabled self enrollment: &#x27;system.generic.VIEW&#x27;  By default courseRoleId is Student and availability.available is Yes.  Providing different values for these fields requires extra entitlements:  - For courses: &#x27;course.user-role.MODIFY&#x27; or &#x27;course.user.MODIFY&#x27; - For organizations: &#x27;course.user-role.MODIFY&#x27; or &#x27;org.user.MODIFY&#x27;  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMembershipsApi~learnApiPublicV1CoursesCourseIdUsersUserIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMembership}
     */
    learnApiPublicV1CoursesCourseIdUsersUserIdPut(body, courseId, userId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CourseMembership;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/users/{userId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1UsersUserIdCoursesGet operation.
     * @callback module:api/CourseMembershipsApi~learnApiPublicV1UsersUserIdCoursesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20025} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User Memberships
     * Returns a list of course and organization memberships for the specified user.  Users can always view their own memberships.  Callers viewing the memberships of another user require at least one of the following entitlements:  - &#x27;system.user.course.enrollment.VIEW&#x27; allows callers to see course memberships - &#x27;system.user.org.enrollment.VIEW&#x27; allows callers to see organization memberships  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMembershipsApi~learnApiPublicV1UsersUserIdCoursesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20025}
     */
    learnApiPublicV1UsersUserIdCoursesGet(userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'userId': userId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'role': opts['role'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'dataSourceId': opts['dataSourceId'],
        'lastAccessed': opts['lastAccessed'],
        'lastAccessedCompare': opts['lastAccessedCompare'],
        'availability.available': opts['availabilityAvailable'],
        'sort': opts['sort'],
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20025;

      return this.apiClient.callApi(
        '/learn/api/public/v1/users/{userId}/courses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
