/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body7 from '../model/Body7';
import Body8 from '../model/Body8';
import CalendarItem from '../model/CalendarItem';
import InlineResponse2003 from '../model/InlineResponse2003';
import InlineResponse2004 from '../model/InlineResponse2004';
import RestException from '../model/RestException';

/**
* Calendar service.
* @module api/CalendarApi
* @version 3900.6.0
*/
export default class CalendarApi {

    /**
    * Constructs a new CalendarApi. 
    * @alias module:api/CalendarApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CalendarsGet operation.
     * @callback module:api/CalendarApi~learnApiPublicV1CalendarsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2003} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Calendars
     * Get the list of calendars. This endpoint will return all calendars viewable by the user. All users can request a list of calendars viewable to them.  **Since**: 3400.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CalendarApi~learnApiPublicV1CalendarsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2003}
     */
    learnApiPublicV1CalendarsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2003;

      return this.apiClient.callApi(
        '/learn/api/public/v1/calendars', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdDelete operation.
     * @callback module:api/CalendarApi~learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Calendar Item
     *   Delete a calendar item or series. &lt;/p&gt; The following must be true in order to delete a calendar item:  - Institution -  - The user must have the &#x27;system.calendar-item.EXECUTE&#x27; entitlement  - Personal -  - Any user may delete their own calendar items  - Course -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.MODIFY&#x27; entitlement - The course calendar must be enabled for the specified course  - GradebookColumn -  - GradebookColumns must be deleted using the Gradebook API endpoint: &lt;code&gt;DELETE /learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}&lt;/code&gt;  - OfficeHours -  - The user must have the &#x27;course.calendar-entry.MODIFY&#x27; entitlement - The user must own the calendarItem - The calendar must be enabled if the calendarItem is associated with a course calendar.  **Since**: 3400.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CalendarApi~learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdDelete(calendarItemType, calendarItemId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'calendarItemType': calendarItemType,
        'calendarItemId': calendarItemId
      };
      let queryParams = {
        'deleteSeries': opts['deleteSeries']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdGet operation.
     * @callback module:api/CalendarApi~learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Calendar Item
     *   Get a course calendar item. &lt;/p&gt;  CalendarItems of type &lt;code&gt;GradebookColumn&lt;/code&gt; are a representation of a specific gradable item and therefore read-only. Modifications to GradebookColumn items performed via the Gradebook Column endpoints will be reflected in the CalendarItems endpoints. &lt;/p&gt;  The CalendarItem &lt;code&gt;id&lt;/code&gt; can be used as the &lt;code&gt;columnId&lt;/code&gt; on the Gradebook Column endpoints found here: &lt;code&gt;/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}&lt;/code&gt;. &lt;/p&gt; The following must be true in order to view the following calendar items types:  - Institution -  - All users can view Institution calendar items  - Personal -  - Any user may view their own calendar items, but not other user&#x27;s calendar items  - Course -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.VIEW&#x27; entitlement - The course calendar must be enabled for the course the calendar item is associated with  - GradebookColumn -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.VIEW&#x27; entitlement - The course calendar must be enabled for the course the GradebookColumn is associated with  - OfficeHours -  - If the OfficeHours are created for a course calendar (calendarId &#x3D; a course id) the user must be enrolled in the course - If the OfficeHours are created for a all courses (calendarId &#x3D; PERSONAL) the user must be enrolled in any course that the user owning the OfficeHours is also enrolled in - In either case above the course calendar must be enabled  **Since**: 3400.9.0
     * @param {module:api/CalendarApi~learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarItem}
     */
    learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdGet(calendarItemType, calendarItemId, callback) {
      let postBody = null;

      let pathParams = {
        'calendarItemType': calendarItemType,
        'calendarItemId': calendarItemId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CalendarItem;

      return this.apiClient.callApi(
        '/learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdPatch operation.
     * @callback module:api/CalendarApi~learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Calendar Item
     *   Update a calendar item or series. &lt;/p&gt;  When updating the series the existing CalendarItems will be removed and a new set of CalendarItems will be created. This is the same behavior as experienced via the UI. &lt;/p&gt; The following must be true in order to update a calendar item:  - Institution -  - The user must have the &#x27;system.calendar-item.EXECUTE&#x27; entitlement  - Personal -  - Any user may update their own calendar items  - Course -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.MODIFY&#x27; entitlement - The course calendar must be enabled for the specified course  - GradebookColumn -  - GradebookColumns must be updated using the Gradebook API endpoint: &lt;code&gt;PATCH /learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}&lt;/code&gt;  - OfficeHours -  - The user must have the &#x27;course.calendar-entry.MODIFY&#x27; entitlement - If calendarId &#x3D; a course id the user must be enrolled in the course and the calendar must be enabled  **Since**: 3400.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CalendarApi~learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarItem}
     */
    learnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdPatch(body, calendarItemType, calendarItemId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'calendarItemType': calendarItemType,
        'calendarItemId': calendarItemId
      };
      let queryParams = {
        'updateSeries': opts['updateSeries']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CalendarItem;

      return this.apiClient.callApi(
        '/learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CalendarsItemsGet operation.
     * @callback module:api/CalendarApi~learnApiPublicV1CalendarsItemsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Calendar Items
     * Get the list of calendar items. This endpoint will return all types of CalendarItems viewable by the user unless a specific &lt;code&gt;type&lt;/code&gt; is specified as a query parameter.  If &lt;code&gt;since&lt;/code&gt; and &lt;code&gt;since&lt;/code&gt; are not provided this endpoint will default to the upcoming two week timeframe from now. &lt;/p&gt;  If only &lt;code&gt;since&lt;/code&gt; is provided this endpoint will default the &lt;code&gt;until&lt;/code&gt; parameter two weeks after &lt;code&gt;since&lt;/code&gt;. &lt;/p&gt;  If only &lt;code&gt;until&lt;/code&gt; is provided this endpoint will default the &lt;code&gt;since&lt;/code&gt; parameter two prior to &lt;code&gt;until&lt;/code&gt;. &lt;/p&gt;  Maximum timespan between &lt;code&gt;since&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt; is 16 weeks. &lt;/p&gt;  CalendarItems of type &lt;code&gt;GradebookColumn&lt;/code&gt; are a representation of a specific gradable item and therefore read-only. Modifications to GradebookColumn items performed via the Gradebook Column endpoints will be reflected in the CalendarItems endpoints. &lt;/p&gt;  The CalendarItem &lt;code&gt;id&lt;/code&gt; can be used as the &lt;code&gt;columnId&lt;/code&gt; on the Gradebook Column endpoints found here: &lt;code&gt;/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}&lt;/code&gt;. &lt;/p&gt; Example requests:  - &lt;code&gt;GET ../items?since&#x3D;2018-01-01T00:00:00.000Z&amp;until2018-02-01T00:00:00.000Z // all calendar items for a given timeframe&lt;/code&gt; - &lt;code&gt;GET ../items?since&#x3D;2018-01-01T00:00:00.000Z&amp;until2018-02-01T00:00:00.000Z&amp;courseId&#x3D;_123_1 // all calendar items for a given course (including Course, OfficeHours, GradebookColumn types)&lt;/code&gt; - &lt;code&gt;GET ../items?since&#x3D;2018-01-01T00:00:00.000Z&amp;until2018-02-01T00:00:00.000Z&amp;courseId&#x3D;_123_1&amp;type&#x3D;GradebookColumn // all GradebookColumn items for a course&lt;/code&gt; - &lt;code&gt;GET ../items?since&#x3D;2018-01-01T00:00:00.000Z&amp;until2018-02-01T00:00:00.000Z&amp;courseId&#x3D;_123_1&amp;type&#x3D;OfficeHours // all OfficeHours for a course&lt;/code&gt; - &lt;code&gt;GET ../items?since&#x3D;2018-01-01T00:00:00.000Z&amp;until2018-02-01T00:00:00.000Z&amp;type&#x3D;GradebookColumn // all gradebook columns due within the given timeframe&lt;/code&gt; - &lt;code&gt;GET ../items?since&#x3D;2018-01-01T00:00:00.000Z&amp;until2018-02-01T00:00:00.000Z&amp;type&#x3D;OfficeHours // all OfficeHours available to current user for a given timeframe&lt;/code&gt; The following must be true in order to view the following calendar item types:  - Institution -  - All users can view Institution calendar items  - Personal -  - Any user may view their own calendar items, but not other user&#x27;s calendar items  - Course -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.VIEW&#x27; entitlement - The course calendar must be enabled for the course the calendar item is associated with  - GradebookColumn -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.VIEW&#x27; entitlement - The course calendar must be enabled for the course the GradebookColumn is associated with  - OfficeHours -  - If the OfficeHours are created for a course calendar (calendarId &#x3D; a course id) the user must be enrolled in the course - If the OfficeHours are created for a all courses (calendarId &#x3D; PERSONAL) the user must be enrolled in any course that the user owning the OfficeHours is also enrolled in - In either case above the course calendar must be enabled  &lt;/p&gt;  **Since**: 3400.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CalendarApi~learnApiPublicV1CalendarsItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004}
     */
    learnApiPublicV1CalendarsItemsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'courseId': opts['courseId'],
        'type': opts['type'],
        'since': opts['since'],
        'until': opts['until'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/learn/api/public/v1/calendars/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CalendarsItemsPost operation.
     * @callback module:api/CalendarApi~learnApiPublicV1CalendarsItemsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Calendar Item
     *   Create a calendar item. Calendar items may be single or recurring. &lt;/p&gt;  CalendarItems of type &lt;code&gt;OfficeHours&lt;/code&gt; will be assigned to the current user. &lt;/p&gt; The following must be true in order to create a calendar item:  - Institution -  - The user must have the &#x27;system.calendar-item.EXECUTE&#x27; entitlement  - Personal -  - Any user may create their own calendar items  - Course -  - The user must be enrolled in the course - The user must have the &#x27;course.calendar-entry.CREATE&#x27; entitlement - The specified courseId must not be for an organization - The course calendar must be enabled for the specified course  - GradebookColumn -  - GradebookColumns must be created using the Gradebook API endpoint: &lt;code&gt;POST /learn/api/public/v2/courses/{courseId}/gradebook/columns&lt;/code&gt;  - OfficeHours -  - The user must have the &#x27;course.calendar-entry.CREATE&#x27; entitlement - If calendarId &#x3D; a course id the user must be enrolled in the course and the calendar must be enabled - Note: To create for all enrolled courses calendarId must be set to PERSONAL  **Since**: 3400.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CalendarApi~learnApiPublicV1CalendarsItemsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarItem}
     */
    learnApiPublicV1CalendarsItemsPost(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CalendarItem;

      return this.apiClient.callApi(
        '/learn/api/public/v1/calendars/items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
