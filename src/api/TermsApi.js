/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body56 from '../model/Body56';
import Body57 from '../model/Body57';
import InlineResponse20044 from '../model/InlineResponse20044';
import RestException from '../model/RestException';
import Term from '../model/Term';

/**
* Terms service.
* @module api/TermsApi
* @version 3900.6.0
*/
export default class TermsApi {

    /**
    * Constructs a new TermsApi. 
    * @alias module:api/TermsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1TermsGet operation.
     * @callback module:api/TermsApi~learnApiPublicV1TermsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20044} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Terms
     * Returns a list of terms.  At least one of the entitlements &#x27;system.term.VIEW&#x27; or &#x27;system.term.MODIFY&#x27; are needed.  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/TermsApi~learnApiPublicV1TermsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20044}
     */
    learnApiPublicV1TermsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'externalId': opts['externalId'],
        'dataSourceId': opts['dataSourceId'],
        'availability.available': opts['availabilityAvailable'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20044;

      return this.apiClient.callApi(
        '/learn/api/public/v1/terms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1TermsPost operation.
     * @callback module:api/TermsApi~learnApiPublicV1TermsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Term} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Term
     * Creates a term.  The &#x27;system.term.MODIFY&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/TermsApi~learnApiPublicV1TermsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Term}
     */
    learnApiPublicV1TermsPost(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Term;

      return this.apiClient.callApi(
        '/learn/api/public/v1/terms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1TermsTermIdDelete operation.
     * @callback module:api/TermsApi~learnApiPublicV1TermsTermIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Term
     * Deletes a term.  The &#x27;system.term.MODIFY&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {module:api/TermsApi~learnApiPublicV1TermsTermIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1TermsTermIdDelete(termId, callback) {
      let postBody = null;

      let pathParams = {
        'termId': termId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/terms/{termId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1TermsTermIdGet operation.
     * @callback module:api/TermsApi~learnApiPublicV1TermsTermIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Term} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Term
     * Loads a term.  The caller must be enrolled in a course contained within the term, or must have at least one of the entitlements &#x27;system.term.VIEW&#x27; or &#x27;system.term.MODIFY&#x27;.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/TermsApi~learnApiPublicV1TermsTermIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Term}
     */
    learnApiPublicV1TermsTermIdGet(termId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'termId': termId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Term;

      return this.apiClient.callApi(
        '/learn/api/public/v1/terms/{termId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1TermsTermIdPatch operation.
     * @callback module:api/TermsApi~learnApiPublicV1TermsTermIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Term} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Term
     * Updates a term.  The &#x27;system.term.MODIFY&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/TermsApi~learnApiPublicV1TermsTermIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Term}
     */
    learnApiPublicV1TermsTermIdPatch(body, termId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'termId': termId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Term;

      return this.apiClient.callApi(
        '/learn/api/public/v1/terms/{termId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
