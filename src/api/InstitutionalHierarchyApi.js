/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body47 from '../model/Body47';
import Body48 from '../model/Body48';
import Body49 from '../model/Body49';
import Body50 from '../model/Body50';
import Body51 from '../model/Body51';
import HierarchyNodeCourse from '../model/HierarchyNodeCourse';
import InlineResponse20032 from '../model/InlineResponse20032';
import InlineResponse20033 from '../model/InlineResponse20033';
import InlineResponse20034 from '../model/InlineResponse20034';
import Node from '../model/Node';
import RestException from '../model/RestException';

/**
* InstitutionalHierarchy service.
* @module api/InstitutionalHierarchyApi
* @version 3900.6.0
*/
export default class InstitutionalHierarchyApi {

    /**
    * Constructs a new InstitutionalHierarchyApi. 
    * @alias module:api/InstitutionalHierarchyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdNodesGet operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1CoursesCourseIdNodesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20032} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Associated Nodes
     * Obtains a list of nodes to which a given course is directly associated.  Users with the &#x27;system.multiinst.node.course.association.VIEW&#x27; entitlement and the &#x27;system.multiinst.node.org.association.VIEW&#x27; system entitlement can access all node association information.  **Since**: 3800.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1CoursesCourseIdNodesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20032}
     */
    learnApiPublicV1CoursesCourseIdNodesGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20032;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/nodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesGet operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20033} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Nodes
     * Returns the Top-level institutional hierarchy nodes  Entitlement system.multiinst.hierarchy.manager.VIEW required  Users with entitlement \&quot;system.multiinst.hierarchy.manager.VIEW\&quot; for Node management can view all fields.  **Since**: 3800.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20033}
     */
    learnApiPublicV1InstitutionalHierarchyNodesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'recursive': opts['recursive'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20033;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenGet operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20033} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Node Children
     * Returns the children of the institutional hierarchy node corresponding to the provided ID  Entitlement system.multiinst.hierarchy.manager.VIEW required  Users with entitlement \&quot;system.multiinst.hierarchy.manager.VIEW\&quot; for Node management can view all fields.  **Since**: 3800.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20033}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenGet(nodeId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'nodeId': nodeId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'recursive': opts['recursive'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20033;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/children', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenPost operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Node} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Child Node
     * Create a new institutional hierarchy node whose parent corresponds to the supplied nodeId  Entitlement system.multiinst.hierarchy.manager.CREATE required  Users with entitlement \&quot;system.multiinst.hierarchy.manager.CREATE\&quot; for Node management can create a new Node.  **Since**: 3800.15.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Node}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdChildrenPost(body, nodeId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'nodeId': nodeId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Node;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/children', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdDelete operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Node Course Association
     * Deletes the association between a given Node and a Course  Entitlement system.multiinst.node.course.association.DELETE required to delete Node-Course associations Entitlement system.multiinst.node.org.association.DELETE required to delete Node-Organization associations  **Since**: 3800.17.0
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdDelete(nodeId, courseId, callback) {
      let postBody = null;

      let pathParams = {
        'nodeId': nodeId,
        'courseId': courseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPatch operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HierarchyNodeCourse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Node Course Association
     * Update a specified node-course association.  Users with the &#x27;system.multiinst.node.course.association.CREATE&#x27; entitlement can update Course - Hierarchy Node associations Users with the &#x27;system.multiinst.node.org.association.CREATE&#x27; entitlement can update Organization - Hierarchy Node associations  **Since**: 3800.17.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HierarchyNodeCourse}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPatch(body, nodeId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'nodeId': nodeId,
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = HierarchyNodeCourse;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPut operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HierarchyNodeCourse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Node Course Association
     * Creates a node-course relationship for the specified node and course.  Users with the &#x27;system.multiinst.node.course.association.CREATE&#x27; entitlement can create Course - Hierarchy Node associations. Users with the &#x27;system.multiinst.node.org.association.CREATE&#x27; entitlement can create Organization - Hierarchy Node associations  **Since**: 3800.17.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HierarchyNodeCourse}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdPut(body, nodeId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'nodeId': nodeId,
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = HierarchyNodeCourse;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesGet operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20034} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Node Course Associations
     * Returns a list of node-course relationships for the specified node.  Users with the &#x27;system.multiinst.node.course.association.VIEW&#x27; entitlement and the &#x27;system.multiinst.node.org.association.VIEW&#x27; system entitlement can access all node association information.  **Since**: 3800.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20034}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesGet(nodeId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'nodeId': nodeId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'course.organization': opts['courseOrganization'],
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20034;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdDelete operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Node
     * Deletes an institutional hierarchy node. The root node cannot be deleted. This deletes orphan children in a cascading fashion.  The &#x27;system.multiinst.hierarchy.manager.DELETE&#x27; entitlement is required.  **Since**: 3800.15.0
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdDelete(nodeId, callback) {
      let postBody = null;

      let pathParams = {
        'nodeId': nodeId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdGet operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Node} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Node
     * Returns the institutional hierarchy node corresponding the provided ID  Entitlement system.multiinst.hierarchy.manager.VIEW required  Users with entitlement \&quot;system.multiinst.hierarchy.manager.VIEW\&quot; for Node management can view all fields.  **Since**: 3800.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Node}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdGet(nodeId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'nodeId': nodeId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Node;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesNodeIdPatch operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Node} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Node
     * Updates Institutional Hierarchy Node information.  Entitlement system.multiinst.hierarchy.manager.MODIFY is required  **Since**: 3800.15.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesNodeIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Node}
     */
    learnApiPublicV1InstitutionalHierarchyNodesNodeIdPatch(body, nodeId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'nodeId': nodeId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Node;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionalHierarchyNodesPost operation.
     * @callback module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Node} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Node
     * Creates a new institutional hierarchy node  Entitlement system.multiinst.hierarchy.manager.CREATE required  Users with entitlement \&quot;system.multiinst.hierarchy.manager.CREATE\&quot; for Node management can create a new Node.  **Since**: 3800.15.0
     * @param {Object} opts Optional parameters
     * @param {module:api/InstitutionalHierarchyApi~learnApiPublicV1InstitutionalHierarchyNodesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Node}
     */
    learnApiPublicV1InstitutionalHierarchyNodesPost(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Node;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionalHierarchy/nodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
