/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Attempt from '../model/Attempt';
import Body60 from '../model/Body60';
import Body61 from '../model/Body61';
import Body62 from '../model/Body62';
import Grade from '../model/Grade';
import GradeColumn from '../model/GradeColumn';
import InlineResponse20046 from '../model/InlineResponse20046';
import InlineResponse20047 from '../model/InlineResponse20047';
import InlineResponse20048 from '../model/InlineResponse20048';
import RestException from '../model/RestException';

/**
* DeprecatedCourseGrades service.
* @module api/DeprecatedCourseGradesApi
* @version 3900.6.0
*/
export default class DeprecatedCourseGradesApi {

    /**
    * Constructs a new DeprecatedCourseGradesApi. 
    * @alias module:api/DeprecatedCourseGradesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Attempt} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Attempt
     * Loads the grade column attempt for the specified id.  The &#x27;course.gradebook.MODIFY&#x27; entitlement is needed to view an attempt. Alternatively, if the user making the request is also the user associated with the attempt grade, then the user may view his/her own attempt.  When accessing an anonymous grade column attempt, if the release criteria has not yet been met, then the &#x27;userId&#x27; attribute will not be populated for the returned attempt.  A subset of attempt properties are available to a student when requesting his or her own attempt:  - id - userId - groupAttemptId - status - text - score - groupOverride - feedback - studentComments - studentSubmission - exempt - created When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student&#x27;s submission &amp; comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student&#x27;s submission &amp; comments are visible to the API Gateway User. &lt;/p&gt; If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  **Since**: 3100.4.0  **Deprecated**: since 3300.0.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Attempt}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGet(courseId, columnId, attemptId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId,
        'attemptId': attemptId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Attempt;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20047} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Attempts
     * Returns a list of attempts associated with the specified grade column.  The &#x27;course.gradebook.MODIFY&#x27; entitlement is needed to view column attempts. Alternatively, if the &#x27;userId&#x27; query parameter is specified, and the user making the request matches the specified &#x27;userId&#x27;, then the user may view his/her own attempt.  When querying an anonymous grade column, if the release criteria has not yet been met, then the &#x27;userId&#x27; attribute will not be populated for the returned column attempts.  If the release criteria has not been met and the &#x27;userId&#x27; query parameter is specified, a 403 response is returned, unless the requesting user matches the specified &#x27;userId&#x27; value.  A subset of attempt properties are available to a student when requesting his or her own attempts:  - id - userId - groupAttemptId - status - text - score - groupOverride - feedback - studentComments - studentSubmission - exempt - created When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student&#x27;s submission &amp; comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student&#x27;s submission &amp; comments are visible to the API Gateway User.  If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  **Since**: 3100.4.0  **Deprecated**: since 3300.0.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20047}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdAttemptsGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'userId': opts['userId'],
        'attemptStatuses': opts['attemptStatuses'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'attemptDate': opts['attemptDate'],
        'attemptDateCompare': opts['attemptDateCompare'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20047;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/attempts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdDelete operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Grade Column
     * Delete a specific grade column. The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3000.7.0  **Deprecated**: since 3200.10.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdDelete(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'onlyIfEmpty': opts['onlyIfEmpty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeColumn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Grade Column
     * Loads a specific grade column.  The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed. Alternatively, student users may view the grade column if they are enrolled in the course, and the mygrade tool is available in the course, and the column is visible to the student. Observers may view the grade column if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.  Student or observer users may view a limited subset of grade column fields:  - id - name - description - externalGrade - contentId - score.possible - grading.type - grading.due - grading.attemptsAllowed - grading.scoringModel  **Since**: 3000.3.0  **Deprecated**: since 3200.10.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeColumn}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GradeColumn;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdPatch operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeColumn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Grade Column
     * Update a manual grade column. The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3000.7.0  **Deprecated**: since 3200.10.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeColumn}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdPatch(body, courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeColumn;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20048} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Grades
     * Returns a list of grades associated with the specified grade column.  This operation does not include &#x27;ReadyToPost&#x27; grades when returning grade details for calculated grade columns.  Users with entitlement &#x27;course.gradebook.MODIFY&#x27; can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of \&quot;403 - Forbidden.\&quot;  Enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status \&quot;403 - Forbidden.\&quot;.  A subset of grade properties are available to a student when requesting his or her own grades:  - userId - columnId - status - text - score - exempt - feedback  **Since**: 3000.3.0  **Deprecated**: since 3300.0.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20048}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20048;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Grade} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Grade
     * Loads the grade column grade for a specific user.  If grade details have yet to be entered for the specified user, then no grade details will be included in the returned grade object.  This operation does not include &#x27;ReadyToPost&#x27; grades when returning grade details for calculated grade columns.  Users with entitlement &#x27;course.gradebook.MODIFY&#x27; can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of \&quot;403 - Forbidden.\&quot;  Enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status \&quot;403 - Forbidden.\&quot;.  A subset of grade properties are available to a student when requesting his or her own grades:  - userId - columnId - status - text - score - exempt - feedback  **Since**: 3000.3.0  **Deprecated**: since 3300.0.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Grade}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGet(courseId, columnId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Grade;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatch operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Grade} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Column Grade
     * Update the grade column grade for a specific user, including the text grade, score, instructor notes and feedback, and exempt status.  When updating text grade or score, the resulting grade is always marked as &#x27;Posted&#x27;.  This end-point, currently, does not support marking the grade as &#x27;ReadyToPost&#x27;.  Grade overrides may be cleared by either specifying the &#x27;score&#x27; attribute as null, or the &#x27;text&#x27;; attribute as null, &#x27;&#x27;, or &#x27;-&#x27; in the body of the request. The entitlement &#x27;course.gradebook.MODIFY&#x27; is required to perform this operation.  **Since**: 3000.5.0  **Deprecated**: since 3300.0.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Grade}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatch(body, courseId, columnId, userId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Grade;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20046} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Grade Columns
     * Returns a list of grade columns.  The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed. Alternatively, student users may view the grade columns if they are enrolled in the course, and the mygrade tool is available in the course, and the columns are visible to the student. Observers may view grade columns if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.  Student or observer users may view a limited subset of grade column fields:  - id - name - description - externalGrade - contentId - score.possible - grading.type - grading.due - grading.attemptsAllowed - grading.scoringModel  **Since**: 3000.3.0  **Deprecated**: since 3200.10.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20046}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'contentId': opts['contentId'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20046;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookColumnsPost operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeColumn} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Grade Column
     * Create a manual grade column. The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3000.7.0  **Deprecated**: since 3200.10.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookColumnsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeColumn}
     */
    learnApiPublicV1CoursesCourseIdGradebookColumnsPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeColumn;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/columns', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookUsersUserIdGet operation.
     * @callback module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20048} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User Grades
     * Loads the course grades for a specific user.  Users with entitlement \&quot;course.gradebook.MODIFY\&quot; have read access to all the properties of the collection results.  Users without entitlement \&quot;course.gradebook.MODIFY\&quot; requesting grades for themselves (i.e., userId &#x3D; current user id) have read access to a restricted subset of properties of the collections result. These are the properties available to a student when requesting his or her own grades:  - userId - columnId - status - text - score - exempt - feedback  **Since**: 3000.3.0  **Deprecated**: since 3300.0.0; use the v2 end-point instead
     * @param {Object} opts Optional parameters
     * @param {module:api/DeprecatedCourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20048}
     */
    learnApiPublicV1CoursesCourseIdGradebookUsersUserIdGet(courseId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20048;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
