/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import AttemptFile from '../model/AttemptFile';
import Body21 from '../model/Body21';
import InlineResponse20014 from '../model/InlineResponse20014';
import RestException from '../model/RestException';

/**
* CourseGradeAttempts service.
* @module api/CourseGradeAttemptsApi
* @version 3900.6.0
*/
export default class CourseGradeAttemptsApi {

    /**
    * Constructs a new CourseGradeAttemptsApi. 
    * @alias module:api/CourseGradeAttemptsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDelete operation.
     * @callback module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Attachment
     * Delete the file for a Student Submission associated to an attempt.  The student who owns the file can delete it while the attempt is in progress.  **Since**: 3500.2.0
     * @param {module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDelete(courseId, attemptId, attemptFileId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'attemptId': attemptId,
        'attemptFileId': attemptFileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files/{attemptFileId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDownloadGet operation.
     * @callback module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDownloadGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download
     * Download the contents of the file for a Student Submission.  **Since**: 3400.6.0
     * @param {module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDownloadGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdDownloadGet(courseId, attemptId, attemptFileId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'attemptId': attemptId,
        'attemptFileId': attemptFileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files/{attemptFileId}/download', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdGet operation.
     * @callback module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttemptFile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Attempt File Meta Data
     * Get the file metadata for a Student Submission associated to the course and attempt.  - Id - Name  **Since**: 3400.6.0
     * @param {module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttemptFile}
     */
    learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesAttemptFileIdGet(courseId, attemptId, attemptFileId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'attemptId': attemptId,
        'attemptFileId': attemptFileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AttemptFile;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files/{attemptFileId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesGet operation.
     * @callback module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20014} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Attempt File Meta Data List
     * Get the list of file metadata for a Student Submission associated to the course and attempt.  - Id - Name  **Since**: 3400.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20014}
     */
    learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesGet(courseId, attemptId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'attemptId': attemptId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20014;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesPost operation.
     * @callback module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttemptFile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attach File
     *   Attach a file to an Attempt for a Student Submission. Currently only supports Classic/9.1 Course Assignments. &lt;/p&gt;  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradeAttemptsApi~learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttemptFile}
     */
    learnApiPublicV1CoursesCourseIdGradebookAttemptsAttemptIdFilesPost(body, courseId, attemptId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'attemptId': attemptId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttemptFile;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
