/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body13 from '../model/Body13';
import ContentGroup from '../model/ContentGroup';
import InlineResponse2007 from '../model/InlineResponse2007';
import RestException from '../model/RestException';

/**
* ContentGroupAssignments service.
* @module api/ContentGroupAssignmentsApi
* @version 3900.6.0
*/
export default class ContentGroupAssignmentsApi {

    /**
    * Constructs a new ContentGroupAssignmentsApi. 
    * @alias module:api/ContentGroupAssignmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGet operation.
     * @callback module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2007} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Content Groups
     * Returns a list of content group associations for the specified content.  Callers not enrolled in the course must have at least one of the following entitlements:  - course.content.designer.VIEW  Callers enrolled in the course will only be able to see Groups that are available to them.  **Since**: 3100.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2007}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGet(courseId, contentId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2007;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdDelete operation.
     * @callback module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Content Group
     * Deletes a content group association.  Required entitlements:  - course.content.DELETE  If the content is going to be accessed in Ultra, and the group being removed is part of a group set, then the caller should ensure that all groups within that set are removed from the content.  **Since**: 3100.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdDelete(courseId, contentId, groupId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId,
        'groupId': groupId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdGet operation.
     * @callback module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Content Group
     * Returns a content group association for the specified content and group.  Callers not enrolled in the course must have at least one of the following entitlements:  - course.content.designer.VIEW  Callers enrolled in the course will only be able to see Groups that are available to them.  **Since**: 3100.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentGroup}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdGet(courseId, contentId, groupId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId,
        'groupId': groupId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentGroup;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdPut operation.
     * @callback module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Content Group
     * Creates a content group association.  Callers not enrolled in the course must have at least one of the following entitlements:  - course.content.MODIFY  If the content is going to be accessed in Ultra, the following rules should be followed by the caller:  - If the group is part of a set, all groups with the set should be associated with the content. - The content should be associated exclusively to individual groups or groups within a set, but not both.  **Since**: 3100.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentGroupAssignmentsApi~learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentGroup}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdPut(body, courseId, contentId, groupId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId,
        'groupId': groupId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentGroup;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
