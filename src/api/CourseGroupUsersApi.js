/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import GroupMembership from '../model/GroupMembership';
import InlineResponse20022 from '../model/InlineResponse20022';
import RestException from '../model/RestException';

/**
* CourseGroupUsers service.
* @module api/CourseGroupUsersApi
* @version 3900.6.0
*/
export default class CourseGroupUsersApi {

    /**
    * Constructs a new CourseGroupUsersApi. 
    * @alias module:api/CourseGroupUsersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersGet operation.
     * @callback module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20022} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group Memberships
     * Returns a list of group memberships objects for the specified group.  Callers not enrolled in the group must have at least one of the following entitlements:  - course.group.VIEW  **Since**: 3600.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20022}
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersGet(groupId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'groupId': groupId,
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20022;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdDelete operation.
     * @callback module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Group Membership
     * Deletes a group from the specified course.  Required entitlements:  - course.group-user.manage.EXECUTE  **Since**: 3600.0.0
     * @param {module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdDelete(courseId, groupId, userId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}/users/{userId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdGet operation.
     * @callback module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupMembership} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group Membership
     * Loads a group membership in the specified group.  Callers not enrolled in the group must have at least one of the following entitlements:  - course.group.VIEW  **Since**: 3600.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupMembership}
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdGet(courseId, groupId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupMembership;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdPut operation.
     * @callback module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupMembership} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Group Membership
     * Creates a group membership in the specified group for the user. For Ultra if the user is already enrolled in another group of the same content item (of the group he wishes to enroll) previously to creating the new membership the previous one is deleted (Move operation). If the conditions for the join operation are not fullfilled the operation will be canceled and a 409 Conflict error returned with a message specifying the reason.  Minimal entitlements required:  - course.group-user.manage.EXECUTE  **Since**: 3600.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupUsersApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupMembership}
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdUsersUserIdPut(courseId, groupId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupMembership;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}/users/{userId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
