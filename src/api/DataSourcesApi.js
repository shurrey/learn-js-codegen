/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body45 from '../model/Body45';
import Body46 from '../model/Body46';
import DataSource from '../model/DataSource';
import InlineResponse20031 from '../model/InlineResponse20031';
import RestException from '../model/RestException';

/**
* DataSources service.
* @module api/DataSourcesApi
* @version 3900.6.0
*/
export default class DataSourcesApi {

    /**
    * Constructs a new DataSourcesApi. 
    * @alias module:api/DataSourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1DataSourcesDataSourceIdDelete operation.
     * @callback module:api/DataSourcesApi~learnApiPublicV1DataSourcesDataSourceIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Data Source
     * Deletes a data source.  The &#x27;system.datasource.manager.VIEW&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/DataSourcesApi~learnApiPublicV1DataSourcesDataSourceIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1DataSourcesDataSourceIdDelete(dataSourceId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'dataSourceId': dataSourceId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/dataSources/{dataSourceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1DataSourcesDataSourceIdGet operation.
     * @callback module:api/DataSourcesApi~learnApiPublicV1DataSourcesDataSourceIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Data Source
     * Loads a data source.  The &#x27;system.datasource.manager.VIEW&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/DataSourcesApi~learnApiPublicV1DataSourcesDataSourceIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSource}
     */
    learnApiPublicV1DataSourcesDataSourceIdGet(dataSourceId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'dataSourceId': dataSourceId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataSource;

      return this.apiClient.callApi(
        '/learn/api/public/v1/dataSources/{dataSourceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1DataSourcesDataSourceIdPatch operation.
     * @callback module:api/DataSourcesApi~learnApiPublicV1DataSourcesDataSourceIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Data Source
     * Updates a data source.  The &#x27;system.datasource.manager.VIEW&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/DataSourcesApi~learnApiPublicV1DataSourcesDataSourceIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSource}
     */
    learnApiPublicV1DataSourcesDataSourceIdPatch(body, dataSourceId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'dataSourceId': dataSourceId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DataSource;

      return this.apiClient.callApi(
        '/learn/api/public/v1/dataSources/{dataSourceId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1DataSourcesGet operation.
     * @callback module:api/DataSourcesApi~learnApiPublicV1DataSourcesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20031} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Data Sources
     * Returns a list of data sources.  The &#x27;system.datasource.manager.VIEW&#x27; entitlement is needed.  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/DataSourcesApi~learnApiPublicV1DataSourcesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20031}
     */
    learnApiPublicV1DataSourcesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'externalId': opts['externalId'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20031;

      return this.apiClient.callApi(
        '/learn/api/public/v1/dataSources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1DataSourcesPost operation.
     * @callback module:api/DataSourcesApi~learnApiPublicV1DataSourcesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Data Source
     * Creates a data source.  The &#x27;system.datasource.manager.VIEW&#x27; entitlement is needed.  **Since**: 2015.11.0
     * @param {Object} opts Optional parameters
     * @param {module:api/DataSourcesApi~learnApiPublicV1DataSourcesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSource}
     */
    learnApiPublicV1DataSourcesPost(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DataSource;

      return this.apiClient.callApi(
        '/learn/api/public/v1/dataSources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
