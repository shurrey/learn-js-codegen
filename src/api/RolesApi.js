/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import CourseRole from '../model/CourseRole';
import InlineResponse20039 from '../model/InlineResponse20039';
import InlineResponse20040 from '../model/InlineResponse20040';
import InlineResponse20041 from '../model/InlineResponse20041';
import InstitutionRole from '../model/InstitutionRole';
import RestException from '../model/RestException';
import SystemRole from '../model/SystemRole';

/**
* Roles service.
* @module api/RolesApi
* @version 3900.6.0
*/
export default class RolesApi {

    /**
    * Constructs a new RolesApi. 
    * @alias module:api/RolesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CourseRolesGet operation.
     * @callback module:api/RolesApi~learnApiPublicV1CourseRolesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20039} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Course Roles
     *   Returns a list of course roles.  This list will contain all the course roles the context user has access to see. &lt;/p&gt;  If the context user has any of these entitlements, then the user can see all course roles:  - system.courserole.CREATE - system.enrollment.CREATE - system.courserole.manager.VIEW - system.courserole.DELETE &lt;/p&gt;  Otherwise, these course role entitlements are checked for any courses the context user is enrolled in:  - course.user-enroll.EXECUTE - system.courserole.CREATE - system.enrollment.CREATE - system.courserole.manager.VIEW - system.courserole.DELETE - course.user-role.MODIFY &lt;/p&gt;  If the logged in user has any of those course role entitlements for a Course where Course.organization &#x3D; false, then the user can see course roles where Availability.Available &#x3D; Course or CourseAndOrganization &lt;/p&gt;  If the logged in user has any of those course role entitlements for a Course where Course.organization &#x3D; true, then the user can see course roles where Availability.Available &#x3D; Organization or CourseAndOrganization &lt;/p&gt;  **Since**: 3300.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/RolesApi~learnApiPublicV1CourseRolesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20039}
     */
    learnApiPublicV1CourseRolesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'custom': opts['custom'],
        'roleId': opts['roleId'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20039;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courseRoles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CourseRolesRoleIdGet operation.
     * @callback module:api/RolesApi~learnApiPublicV1CourseRolesRoleIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Course Role
     *   Returns a single course role.  The path id can be either the CourseRole.id field like \&quot;/courseRoles/_5_1\&quot; or the CourseRole.roleId field like \&quot;/courseRoles/roleId:Student\&quot;. &lt;/p&gt;  A 403 (FORBIDDEN) status is returned if the context user does not have access to see the course role. &lt;/p&gt;  If the context user has any of these entitlements, then the user can see all course roles:  - system.courserole.CREATE - system.enrollment.CREATE - system.courserole.manager.VIEW - system.courserole.DELETE &lt;/p&gt;  Otherwise, these course role entitlements are checked for any courses the context user is enrolled in:  - course.user-enroll.EXECUTE - system.courserole.CREATE - system.enrollment.CREATE - system.courserole.manager.VIEW - system.courserole.DELETE - course.user-role.MODIFY &lt;/p&gt;  If the logged in user has any of those course role entitlements for a Course where Course.organization &#x3D; false, then the user can see course roles where Availability.Available &#x3D; Course or CourseAndOrganization &lt;/p&gt;  If the logged in user has any of those course role entitlements for a Course where Course.organization &#x3D; true, then the user can see course roles where Availability.Available &#x3D; Organization or CourseAndOrganization &lt;/p&gt;  **Since**: 3300.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/RolesApi~learnApiPublicV1CourseRolesRoleIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseRole}
     */
    learnApiPublicV1CourseRolesRoleIdGet(roleId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'roleId': roleId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CourseRole;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courseRoles/{roleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionRolesGet operation.
     * @callback module:api/RolesApi~learnApiPublicV1InstitutionRolesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20040} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Institution Roles
     * Returns a list of institution roles.  Users must have the entitlement &#x27;system.institutionrole.VIEW&#x27; to access this endpoint.  **Since**: 3300.4.0
     * @param {Object} opts Optional parameters
     * @param {module:api/RolesApi~learnApiPublicV1InstitutionRolesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20040}
     */
    learnApiPublicV1InstitutionRolesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'roleId': opts['roleId'],
        'custom': opts['custom'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20040;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionRoles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1InstitutionRolesRoleIdGet operation.
     * @callback module:api/RolesApi~learnApiPublicV1InstitutionRolesRoleIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InstitutionRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Institution Role
     * Loads a specific institution role.  Users must have the entitlement &#x27;system.institutionrole.VIEW&#x27; to access this endpoint.  **Since**: 3300.4.0
     * @param {Object} opts Optional parameters
     * @param {module:api/RolesApi~learnApiPublicV1InstitutionRolesRoleIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InstitutionRole}
     */
    learnApiPublicV1InstitutionRolesRoleIdGet(roleId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'roleId': roleId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InstitutionRole;

      return this.apiClient.callApi(
        '/learn/api/public/v1/institutionRoles/{roleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1SystemRolesGet operation.
     * @callback module:api/RolesApi~learnApiPublicV1SystemRolesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20041} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get System Roles
     * Returns a list of system roles.  Users must have the &#x27;system.systemrole.manager.VIEW&#x27; entitlement to access this endpoint.  **Since**: 3300.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/RolesApi~learnApiPublicV1SystemRolesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20041}
     */
    learnApiPublicV1SystemRolesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'roleId': opts['roleId'],
        'custom': opts['custom'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20041;

      return this.apiClient.callApi(
        '/learn/api/public/v1/systemRoles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1SystemRolesRoleIdGet operation.
     * @callback module:api/RolesApi~learnApiPublicV1SystemRolesRoleIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get System Role
     * Get a specific system role by roleId. See the roleId parameter for valid roleId formats.  Users must have the &#x27;system.systemrole.manager.VIEW&#x27; entitlement to access this endpoint.  **Since**: 3300.5.0
     * @param {Object} opts Optional parameters
     * @param {module:api/RolesApi~learnApiPublicV1SystemRolesRoleIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemRole}
     */
    learnApiPublicV1SystemRolesRoleIdGet(roleId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'roleId': roleId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SystemRole;

      return this.apiClient.callApi(
        '/learn/api/public/v1/systemRoles/{roleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
