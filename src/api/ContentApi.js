/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body10 from '../model/Body10';
import Body11 from '../model/Body11';
import Body12 from '../model/Body12';
import Body9 from '../model/Body9';
import Content from '../model/Content';
import CreateAssignmentResult from '../model/CreateAssignmentResult';
import InlineResponse2005 from '../model/InlineResponse2005';
import RestException from '../model/RestException';

/**
* Content service.
* @module api/ContentApi
* @version 3900.6.0
*/
export default class ContentApi {

    /**
    * Constructs a new ContentApi. 
    * @alias module:api/ContentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdChildrenGet operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdChildrenGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2005} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Content Children
     * List all child content items directly beneath another content item.  This is only valid for content items that are allowed to have children (e.g. Folders).  Users with at least one of the following entitlements may access all child contents from a content item:  - course.adaptiverelease.CREATE - course.adaptiverelease.DELETE - course.adaptiverelease.MODIFY - course.adaptiverelease.VIEW - course.configure-areas.EXECUTE - course.content-item.copy.EXECUTE - course.content.DELETE - course.content.MODIFY - course.learningstandards.alignment.CREATE - course.performance.dashboard.VIEW In any of the following cases, the user may also get the child contents from a content item.  - The user has a role in the course other than guest or observer, and doesn&#x27;t have any of the previously mentioned entitlements. - The user has the role of observer, and both the course and the underlying content allow observer access. - The user accesses the course as guest, both the course and the underlying content allow guest access, further, the course content menu allows guest access as well for the original courses. For other users, permission to view the content item will depend on the availability settings of the course and  the content item. The following fields will be filtered out:  - availability.available - availability.allowGuests - availability.adaptiveRelease &lt;/p&gt;  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdChildrenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2005}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdChildrenGet(courseId, contentId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'recursive': opts['recursive'],
        'contentHandler': opts['contentHandler'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'reviewable': opts['reviewable'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2005;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}/children', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdChildrenPost operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdChildrenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Content} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Child
     * Create a new child content item beneath an existing content item.  This is only valid for content items that are allowed to have children (e.g. Folders). Entitlement \&quot;course.content.CREATE\&quot; required to create Course Content.  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdChildrenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Content}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdChildrenPost(body, courseId, contentId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Content;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}/children', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdDelete operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Content
     * Delete a content item.  The &#x27;course.content.DELETE&#x27; entitlement is required.  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdDelete(courseId, contentId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent'],
        'deleteGrades': opts['deleteGrades']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdGet operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Content} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Content
     * Load a specific content item from a course.  Users with at least one of the following entitlements may access any content item:  - course.adaptiverelease.CREATE - course.adaptiverelease.DELETE - course.adaptiverelease.MODIFY - course.adaptiverelease.VIEW - course.configure-areas.EXECUTE - course.content-item.copy.EXECUTE - course.content.DELETE - course.content.MODIFY - course.learningstandards.alignment.CREATE - course.performance.dashboard.VIEW  For other users, permission to view the content item will depend on the availability settings of the course and the content item.  The following fields will be filtered out:  - availability.available - availability.allowGuests - availability.adaptiveRelease  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Content}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdGet(courseId, contentId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Content;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsContentIdPatch operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Content} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Content
     * Update a content item.  The &#x27;course.content.MODIFY&#x27; entitlement is required.  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsContentIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Content}
     */
    learnApiPublicV1CoursesCourseIdContentsContentIdPatch(body, courseId, contentId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'contentId': contentId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Content;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/{contentId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsCreateAssignmentPost operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsCreateAssignmentPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAssignmentResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Assignment
     * Create assignment content, grade column and file attachments in one POST. Any files specified with assignment creation must be previously uploaded using the uploads endpoint. Ultra courses supported since 3300.9.0 Classic courses supported since 3400.9.0 &lt;/p&gt; For Ultra courses, this will create:  - A content item with a contentHandler.id &#x3D; resource/x-bb-asmt-test-link - A gradebook column with contentId &#x3D; id of the new content - An assessment question with questionHandler.type &#x3D; presentation that includes the instructions as the question text - An assessment question with questionHandler.type &#x3D; presentation for each given file attachment &lt;/p&gt; The following entitlements are required to create an Ultra assignment:  - course.content.CREATE - course.assessment.CREATE - course.content.assessment.deploy.EXECUTE - course.gradebook.MODIFY - course.assessment.MODIFY, if instructions or files are specified &lt;/p&gt; For Classic courses, this will create:  - A content item with contentHandler.id &#x3D; resource/x-bb-assignment - A gradebook column with contentId &#x3D; id of the new content - A file attachment for each given file attachment id The following entitlements are required to create a Classic assignment:  - course.content.CREATE - course.gradebook.MODIFY - course.content.MODIFY, if files are specified &lt;/p&gt;  **Since**: 3300.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsCreateAssignmentPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAssignmentResult}
     */
    learnApiPublicV1CoursesCourseIdContentsCreateAssignmentPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAssignmentResult;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents/createAssignment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsGet operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2005} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Contents
     * List top-level content items in a course.  Users with at least one of the following entitlements may access any content item:  - course.adaptiverelease.CREATE - course.adaptiverelease.DELETE - course.adaptiverelease.MODIFY - course.adaptiverelease.VIEW - course.configure-areas.EXECUTE - course.content-item.copy.EXECUTE - course.content.DELETE - course.content.MODIFY - course.learningstandards.alignment.CREATE - course.performance.dashboard.VIEW &lt;/p&gt;  For other users, permission to view the content item will depend on the availability settings of the course and  the content item.  The following fields will be filtered out:  - availability.available - availability.allowGuests - availability.adaptiveRelease &lt;/p&gt;  **Since**: 3000.1.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2005}
     */
    learnApiPublicV1CoursesCourseIdContentsGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'recursive': opts['recursive'],
        'contentHandler': opts['contentHandler'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'reviewable': opts['reviewable'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2005;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdContentsPost operation.
     * @callback module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Content} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Content
     * Create a new top-level content item. Currently only folders may be created as top-level content items in a Classic course. For Ultra courses any content item is allowed and will be placed under the ROOT folder. Entitlement \&quot;course.content.CREATE\&quot; required to create Course Content.  **Since**: 3000.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/ContentApi~learnApiPublicV1CoursesCourseIdContentsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Content}
     */
    learnApiPublicV1CoursesCourseIdContentsPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'allowChildCourseContent': opts['allowChildCourseContent'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Content;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/contents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
