/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body40 from '../model/Body40';
import Body41 from '../model/Body41';
import CourseMessage from '../model/CourseMessage';
import InlineResponse20026 from '../model/InlineResponse20026';
import InlineResponse20027 from '../model/InlineResponse20027';
import InlineResponse20028 from '../model/InlineResponse20028';
import RestException from '../model/RestException';

/**
* CourseMessages service.
* @module api/CourseMessagesApi
* @version 3900.6.0
*/
export default class CourseMessagesApi {

    /**
    * Constructs a new CourseMessagesApi. 
    * @alias module:api/CourseMessagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMessagesFoldersGet operation.
     * @callback module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesFoldersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20027} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Folders
     * Retrieve all the folders for a course. This endpoint currently supports only Original courses.  The \&quot;course.message.VIEW\&quot; entitlement is required to view a Course Message folders.  **Since**: 3900.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesFoldersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20027}
     */
    learnApiPublicV1CoursesCourseIdMessagesFoldersGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20027;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/messages/folders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMessagesGet operation.
     * @callback module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20026} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Messages
     * Retrieve all the messages for a course by specified folder. This endpoint currently supports only Original courses.  The \&quot;course.message.VIEW\&quot; entitlement is required to view Course Messages.  **Since**: 3900.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20026}
     */
    learnApiPublicV1CoursesCourseIdMessagesGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'folderType': opts['folderType'],
        'folderName': opts['folderName'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20026;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/messages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMessagesMessageIdDelete operation.
     * @callback module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesMessageIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Message
     * Delete a message.  The &#x27;course.message.DELETE&#x27; entitlement is required to delete the message.  **Since**: 3900.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesMessageIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMessagesMessageIdDelete(courseId, messageId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'messageId': messageId
      };
      let queryParams = {
        'folderType': opts['folderType'],
        'folderName': opts['folderName']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/messages/{messageId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMessagesMessageIdParticipantsGet operation.
     * @callback module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesMessageIdParticipantsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20028} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Message Participants
     * Retrieve all participants for the specified message.  The \&quot;course.message.VIEW\&quot; entitlement is required to view a Course Message participants.  **Since**: 3900.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesMessageIdParticipantsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20028}
     */
    learnApiPublicV1CoursesCourseIdMessagesMessageIdParticipantsGet(courseId, messageId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'messageId': messageId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'participationType': opts['participationType'],
        'sort': opts['sort'],
        'fields': opts['fields'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20028;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/messages/{messageId}/participants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMessagesMessageIdPatch operation.
     * @callback module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesMessageIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Message
     * Update the read status of the message. This endpoint currently supports only Original courses.  **Since**: 3900.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesMessageIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMessage}
     */
    learnApiPublicV1CoursesCourseIdMessagesMessageIdPatch(body, courseId, messageId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'messageId': messageId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CourseMessage;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/messages/{messageId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMessagesPost operation.
     * @callback module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Message
     * Creates a new Course Message. This endpoint currently supports only Original courses.  The \&quot;course.message.CREATE\&quot; entitlement is required to create or reply a course message  **Since**: 3900.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseMessagesApi~learnApiPublicV1CoursesCourseIdMessagesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMessage}
     */
    learnApiPublicV1CoursesCourseIdMessagesPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CourseMessage;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/messages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
