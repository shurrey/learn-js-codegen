/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import RestException from '../model/RestException';
import UploadedFileInfo from '../model/UploadedFileInfo';

/**
* Uploads service.
* @module api/UploadsApi
* @version 3900.6.0
*/
export default class UploadsApi {

    /**
    * Constructs a new UploadsApi. 
    * @alias module:api/UploadsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1UploadsPost operation.
     * @callback module:api/UploadsApi~learnApiPublicV1UploadsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UploadedFileInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload
     * Upload a file to temporary storage. The request is a multipart/form-data POST following RFC 1867. (https://www.ietf.org/rfc/rfc1867.txt)  The uploaded file will be scanned for potential security threats by the system&#x27;s XSS filters. If the file is deemed as unsafe, the request will be rejected and an HTTP Status of 422 is returned.  Returns an ID of the file reference, so it can be used for processing by a different service.  Example Request: &lt;pre&gt;  curl -X POST -H &#x27;Authorization: Bearer your_token&#x27; -F &#x27;file&#x3D;@/path/to/your/file&#x27; https://YOUR_LEARN_INSTANCE/learn/api/public/v1/uploads  &lt;/pre&gt;  **Since**: 3100.12.0
     * @param {Object} opts Optional parameters
     * @param {module:api/UploadsApi~learnApiPublicV1UploadsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UploadedFileInfo}
     */
    learnApiPublicV1UploadsPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UploadedFileInfo;

      return this.apiClient.callApi(
        '/learn/api/public/v1/uploads', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
