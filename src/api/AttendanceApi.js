/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import AttendanceDataDownloadUrl from '../model/AttendanceDataDownloadUrl';
import AttendanceRecord from '../model/AttendanceRecord';
import Body2 from '../model/Body2';
import Body3 from '../model/Body3';
import Body4 from '../model/Body4';
import Body5 from '../model/Body5';
import Body6 from '../model/Body6';
import CourseMeeting from '../model/CourseMeeting';
import InlineResponse2001 from '../model/InlineResponse2001';
import InlineResponse2002 from '../model/InlineResponse2002';
import RestException from '../model/RestException';

/**
* Attendance service.
* @module api/AttendanceApi
* @version 3900.6.0
*/
export default class AttendanceApi {

    /**
    * Constructs a new AttendanceApi. 
    * @alias module:api/AttendanceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsDelete operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete All Meetings In Course
     * Deletes all course meetings in the course for the given course Id.  The &#x27;course.attendance.DELETE&#x27; entitlement is required to delete Course Meetings.  **Since**: 3500.7.0
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsDelete(courseId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsDownloadUrlGet operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsDownloadUrlGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttendanceDataDownloadUrl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate Attendance Data Download Url
     * Generate Download URL for Attendance Data.  The \&quot;course.attendance.CREATE\&quot; entitlement is required to generate download URL for attendance data.  **Since**: ????
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsDownloadUrlGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttendanceDataDownloadUrl}
     */
    learnApiPublicV1CoursesCourseIdMeetingsDownloadUrlGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AttendanceDataDownloadUrl;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/downloadUrl', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsGet operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Course Meetings
     * Returns a list of course meetings for a given course id.  The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    learnApiPublicV1CoursesCourseIdMeetingsGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdDelete operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Course Meeting
     * Delete the Course Meeting for the given course meeting Id.  The &#x27;course.attendance.DELETE&#x27; entitlement is required to delete Course Meetings.  **Since**: 3500.7.0
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdDelete(courseId, meetingId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdGet operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMeeting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Course Meeting
     * Returns a Course Meeting for the given meeting Id.  The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMeeting}
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdGet(courseId, meetingId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CourseMeeting;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdPatch operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMeeting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Course Meeting
     * Update the Course Meeting for the given Course/Organization.  The \&quot;course.attendance.MODIFY\&quot; entitlement is required to update a Course Meeting. The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMeeting}
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdPatch(body, courseId, meetingId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CourseMeeting;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersBulkPost operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersBulkPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Attendance Records
     * Creates or updates attendance records for the meeting for all users in the course.  User required both of the entitlements below. If the user does not have the required entitlements,no records are created or modified.  Entitlement | User Access ------------|-----------  course.attendance.CREATE | Create Course/Organization Course Meeting Attendance course.attendance.MODIFY | Update Course/Organization Meeting Attendance  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersBulkPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersBulkPost(body, courseId, meetingId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users/bulk', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersDelete operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete All Records In Meeting
     * Deletes all attendance records in the course meeting for a given meeting Id.  The &#x27;course.attendance.DELETE&#x27; entitlement is required to delete attendance records.  **Since**: 3500.7.0
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersDelete(courseId, meetingId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersGet operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2002} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Attendance Records By Meeting Id
     * Returns a list of Course Meeting Attendance for a given meeting id.  The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting attendance.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2002}
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersGet(courseId, meetingId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2002;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersPost operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttendanceRecord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Attendance Record
     * Creates a new Course Meeting Attendance within the provided Course/Organization Id.  The \&quot;course.attendance.CREATE\&quot; entitlement is required to create a Course Meeting Attendance.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttendanceRecord}
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersPost(body, courseId, meetingId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttendanceRecord;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdDelete operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Attendance Record
     * Delete attendance record for meeting.It will delete meeting attendance within a course meeting.  The &#x27;course.attendance.DELETE&#x27; entitlement is required to delete Attendance Record.  **Since**: 3500.7.0
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdDelete(courseId, meetingId, userId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users/{userId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdGet operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttendanceRecord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Attendance Record
     * Returns a Course Meeting Attendance information for the given meeting and user Id.  The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting Attendance.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttendanceRecord}
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdGet(courseId, meetingId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AttendanceRecord;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdPatch operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttendanceRecord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Attendance Record
     * Update the Course Meeting Attendance data for the given Course/Organization.  The \&quot;course.attendance.MODIFY\&quot; entitlement is required to update a Course Meeting Attendance. The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting attendance.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttendanceRecord}
     */
    learnApiPublicV1CoursesCourseIdMeetingsMeetingIdUsersUserIdPatch(body, courseId, meetingId, userId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'meetingId': meetingId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttendanceRecord;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/{meetingId}/users/{userId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsPost operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CourseMeeting} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Course Meeting
     * Creates a new Course Meeting within the provided Course/Organization Id. An attendance grade book column will automatically be generated if one does not exist.  The \&quot;course.attendance.CREATE\&quot; entitlement is required to create a Course Meeting.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CourseMeeting}
     */
    learnApiPublicV1CoursesCourseIdMeetingsPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CourseMeeting;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdAllDelete operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdAllDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete All Attendance By User Id
     * Deletes all attendance records for the user. It will delete meeting attendance regardless of course.  The &#x27;course.attendance.DELETE&#x27; entitlement is required to delete attendance records.  **Since**: 3500.7.0
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdAllDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdAllDelete(courseId, userId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/users/{userId}/all', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdDelete operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete All Attendance Records By Course And User Id
     * Deletes all attendance records for the user in specific course.  The &#x27;course.attendance.DELETE&#x27; entitlement is required to delete attendance records.  **Since**: 3500.7.0
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdDelete(courseId, userId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/users/{userId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdGet operation.
     * @callback module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2002} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Attendance Records By User Id
     * Returns a list of Course Meeting Attendance for a given user id regardless of courses and meetings.  The \&quot;course.attendance.VIEW\&quot; entitlement is required to view a Course Meeting attendance.  **Since**: 3500.7.0
     * @param {Object} opts Optional parameters
     * @param {module:api/AttendanceApi~learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2002}
     */
    learnApiPublicV1CoursesCourseIdMeetingsUsersUserIdGet(courseId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2002;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/meetings/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
