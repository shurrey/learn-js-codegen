/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import AttemptV2 from '../model/AttemptV2';
import Body24 from '../model/Body24';
import Body25 from '../model/Body25';
import Body26 from '../model/Body26';
import Body27 from '../model/Body27';
import Body28 from '../model/Body28';
import Body29 from '../model/Body29';
import Body30 from '../model/Body30';
import GradeColumnV2 from '../model/GradeColumnV2';
import GradeSchema from '../model/GradeSchema';
import GradeV2 from '../model/GradeV2';
import InlineResponse20017 from '../model/InlineResponse20017';
import InlineResponse20018 from '../model/InlineResponse20018';
import InlineResponse20019 from '../model/InlineResponse20019';
import InlineResponse20020 from '../model/InlineResponse20020';
import RestException from '../model/RestException';

/**
* CourseGrades service.
* @module api/CourseGradesApi
* @version 3900.6.0
*/
export default class CourseGradesApi {

    /**
    * Constructs a new CourseGradesApi. 
    * @alias module:api/CourseGradesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookSchemasGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20017} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Grade Schemas
     * Returns a list of grade schemas associated with the specified course.  Users with entitlements &#x27;course.gradebook.MODIFY&#x27; or &#x27;course.user.grades.VIEW&#x27;, or users enrolled in the specified course can retrieve grade schema details.  A subset of the schema properties are available to enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement:  - id - scaleType  **Since**: 3300.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20017}
     */
    learnApiPublicV1CoursesCourseIdGradebookSchemasGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20017;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/schemas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookSchemasPost operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Grade Schema
     * Create a Tabular Grade Schema on this course. Currently only supports Classic/9.1 Courses.  The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3300.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeSchema}
     */
    learnApiPublicV1CoursesCourseIdGradebookSchemasPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeSchema;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/schemas', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdDelete operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Grade Schema
     * Deletes the grade schema associated with the specified course and schema Id.  Requires entitlement &#x27;course.gradebook.MODIFY&#x27;  Grade schemas in Ultra courses may not be deleted  A schema must be removable (not in-use, and either tabular or user-created) to be deleted  **Since**: 3300.2.0
     * @param {module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdDelete(courseId, schemaId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'schemaId': schemaId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/schemas/{schemaId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Grade Schema
     * Loads the grade schema associated with the specified course and schema Id.  Users with entitlements &#x27;course.gradebook.MODIFY&#x27; or &#x27;course.user.grades.VIEW&#x27;, or users enrolled in the specified course can retrieve the grade schema details.  A subset of the schema properties are available to enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement:  - id - scaleType  **Since**: 3300.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeSchema}
     */
    learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdGet(courseId, schemaId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'schemaId': schemaId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GradeSchema;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/schemas/{schemaId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdPatch operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Grade Schema
     *   Updates the grade schema associated with the specified course and schema Id. &lt;/p&gt;  Requires entitlement &#x27;course.gradebook.MODIFY&#x27; &lt;/p&gt;  A schema must have a scaleType of Tabular to be updated &lt;/p&gt;  If updating the symbols field, the following criteria must be true:  - All symbols for the schema must be included. Any existing symbols not included in the patch will be deleted. - There must be at least 1 symbol for schemas associated with Classic courses, and 2 for Ultra courses. - When sorted descending by lowerBound, The lowerBound of a symbol must be equal to the upperBound of the following symbol.  In other words,      there should be no gaps or overlaps between the symbols. - The lowerBound, upperBound and absoluteValue of all symbols must be nonnegative. - The text field must be unique for each symbol in a schema. - The lowerBound and upperBound fields must have a maximum of 3 digits after the decimal point. - The absoluteValue field must have a maximum of 3 digits after the decimal point for Classic courses, and 4 for Ultra courses.-  -  &lt;/p&gt;  **Since**: 3300.2.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeSchema}
     */
    learnApiPublicV1CoursesCourseIdGradebookSchemasSchemaIdPatch(body, courseId, schemaId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'schemaId': schemaId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeSchema;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/gradebook/schemas/{schemaId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttemptV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Attempt
     * Loads the grade column attempt for the specified id.  The &#x27;course.gradebook.MODIFY&#x27; entitlement is needed to view an attempt. Alternatively, if the user making the request is also the user associated with the attempt grade, then the user may view his/her own attempt.  When accessing an anonymous grade column attempt, if the release criteria has not yet been met, then the &#x27;userId&#x27; attribute will not be populated for the returned attempt.  A subset of attempt properties are available to a student when requesting his or her own attempt:  - id - userId - groupAttemptId - status - displayGrade.scaleType - displayGrade.score - displayGrade.text - groupOverride - feedback - studentComments - studentSubmission - exempt - created  When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student&#x27;s submission &amp; comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student&#x27;s submission &amp; comments are visible to the API Gateway User. &lt;/p&gt; If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  **Since**: 3300.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttemptV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdGet(courseId, columnId, attemptId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId,
        'attemptId': attemptId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AttemptV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdPatch operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttemptV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Column Attempt
     * Update an existing Attempt on a Grade Column. &lt;/p&gt; Students can only modify the studentSubmission, studentComments and status of their own attempt if the status is InProgress. The status can only be set to NeedsGrading.  Doing so is the equivalent of submitting the attempt. &lt;/p&gt; Instructors can modify all mutable fields but studentSubmission and studentComments as long as the status is not InProgress. Setting the status to Complete is the equivalent of posting a graded attempt.  The \&quot;course.gradebook.MODIFY\&quot; entitlement is required to update score, text, notes, feedback and set the status to Complete. &lt;/p&gt; If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, then the caller must be in a secure browser in order to create the attempt. Classic course support since 3500.2.0  **Since**: 3300.12.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttemptV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdPatch(body, columnId, attemptId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'columnId': columnId,
        'attemptId': attemptId,
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttemptV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20019} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Attempts
     * Returns a list of attempts associated with the specified grade column.  The &#x27;course.gradebook.MODIFY&#x27; entitlement is needed to view column attempts. Alternatively, if the &#x27;userId&#x27; query parameter is specified, and the user making the request matches the specified &#x27;userId&#x27;, then the user may view his/her own attempt.  When querying an anonymous grade column, if the release criteria has not yet been met, then the &#x27;userId&#x27; attribute will not be populated for the returned column attempts.  If the release criteria has not been met and the &#x27;userId&#x27; query parameter is specified, a 403 response is returned, unless the requesting user matches the specified &#x27;userId&#x27; value.  A subset of attempt properties are available to a student when requesting his or her own attempts:  - id - userId - groupAttemptId - status - displayGrade.scaleType - displayGrade.score - displayGrade.text - groupOverride - feedback - studentComments - studentSubmission - exempt - created  When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student&#x27;s submission &amp; comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student&#x27;s submission &amp; comments are visible to the API Gateway User. &lt;/p&gt; If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.  **Since**: 3300.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20019}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'userId': opts['userId'],
        'attemptStatuses': opts['attemptStatuses'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'attemptDate': opts['attemptDate'],
        'attemptDateCompare': opts['attemptDateCompare'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20019;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsPost operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttemptV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Column Attempt
     * Create an Attempt on the specified Grade Column. Currently supports Classic and Ultra Course Assignments. Student attributes (studentSubmission &amp; studentComments) can only be specified by Student Users. Grader attributes (text, score, notes &amp; feedback, attemptDate) can only be specified by Grader Users. Graders must have the entitlement \&quot;course.gradebook.MODIFY\&quot; for the course.  Graders are allowed to create attempts that contain \&quot;studentSubmission\&quot; text on behalf of a student if the authenticated application for this request has the \&quot;course.attempt.nonowner.SUBMIT\&quot; entitlement and the attempt has a \&quot;status\&quot; of NeedsGrading. &lt;/p&gt; If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, then the caller must be in a secure browser in order to create the attempt.  **Since**: 3300.12.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttemptV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsPost(body, columnId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'columnId': columnId,
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttemptV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdDelete operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Grade Column
     * Delete a specific grade column. The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3200.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdDelete(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'onlyIfEmpty': opts['onlyIfEmpty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeColumnV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Grade Column
     * Loads a specific grade column.  The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed. Alternatively, student users may view the grade column if they are enrolled in the course, and the mygrade tool is available in the course, and the column is visible to the student. Observers may view the grade column if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.  Student or observer users may view a limited subset of grade column fields:  - id - name - description - externalGrade - contentId - score.possible - grading.type - grading.due - grading.attemptsAllowed - grading.scoringModel  **Since**: 3200.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeColumnV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GradeColumnV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdPatch operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeColumnV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Grade Column
     * Update a manual grade column. The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3200.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeColumnV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdPatch(body, courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeColumnV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20020} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Grades
     * Returns a list of grades associated with the specified grade column.  By default this operation does not include &#x27;ReadyToPost&#x27; grades when returning grade details for calculated grade columns. This can be changed by setting the query parameter \&quot;includeUnpostedGrades\&quot; to true. The columns considered as &#x27;ReadyToPost&#x27; are those which have a grade associated but have the status NEEDS_GRADING.  Users with entitlement &#x27;course.gradebook.MODIFY&#x27; can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of \&quot;403 - Forbidden.\&quot;  Enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status \&quot;403 - Forbidden.\&quot;.  A subset of grade properties are available to a student when requesting his or her own grades:  - userId - columnId - status - displayGrade - exempt - feedback - changeIndex  **Since**: 3300.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20020}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'changeIndex': opts['changeIndex'],
        'includeUnpostedGrades': opts['includeUnpostedGrades'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20020;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersLastChangedGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersLastChangedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Grade Last Changed
     * Loads the grade column grade with the maximum change index. This change index can be used to determine the relative order in which the grades were created and/or updated. This operation does not include &#x27;ReadyToPost&#x27; grades when determining the maximum change index grade.  Users with entitlement &#x27;course.gradebook.MODIFY&#x27; can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of \&quot;403 - Forbidden.\&quot;  Enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement may only view their own grade; such users cannot retrieve grades of other users. A request for the grade in a columns that has been hidden from students in the gradebook will return with a status \&quot;403 - Forbidden.\&quot;.  **Since**: 3300.4.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersLastChangedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersLastChangedGet(courseId, columnId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GradeV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users/lastChanged', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Column Grade
     * Loads the grade column grade for a specific user.  If grade details have yet to be entered for the specified user, then no grade details will be included in the returned grade object.  This operation does not include &#x27;ReadyToPost&#x27; grades when returning grade details for calculated grade columns.  Users with entitlement &#x27;course.gradebook.MODIFY&#x27; can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of \&quot;403 - Forbidden.\&quot;  Enrolled users without the &#x27;course.gradebook.MODIFY&#x27; entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status \&quot;403 - Forbidden.\&quot;.  A subset of grade properties are available to a student when requesting his or her own grades:  - userId - columnId - status - displayGrade - exempt - feedback - changeIndex  **Since**: 3300.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdGet(courseId, columnId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GradeV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatch operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Column Grade
     * Update the grade column grade for a specific user, including the text grade, score, instructor notes and feedback, and exempt status.  When updating text grade or score, the resulting grade is always marked as &#x27;Posted&#x27;.  This end-point, currently, does not support marking the grade as &#x27;ReadyToPost&#x27;.  Grade overrides may be cleared by either specifying the &#x27;score&#x27; attribute as null, or the &#x27;text&#x27;; attribute as null, &#x27;&#x27;, or &#x27;-&#x27; in the body of the request. The entitlement &#x27;course.gradebook.MODIFY&#x27; is required to perform this operation.  **Since**: 3300.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdUsersUserIdPatch(body, courseId, columnId, userId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'columnId': columnId,
        'userId': userId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20018} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Grade Columns
     * Returns a list of grade columns.  The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed. Alternatively, student users may view the grade columns if they are enrolled in the course, and the mygrade tool is available in the course, and the columns are visible to the student. Observers may view grade columns if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.  Student or observer users may view a limited subset of grade column fields:  - id - name - displayName - description - externalGrade - contentId - score.possible - scoreProviderHandle - grading.type - grading.due - grading.attemptsAllowed - grading.scoringModel  **Since**: 3200.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20018}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'contentId': opts['contentId'],
        'displayName': opts['displayName'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20018;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookColumnsPost operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GradeColumnV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Grade Column
     * Create a manual grade column. The entitlement \&quot;course.gradebook.MODIFY\&quot; is needed.  **Since**: 3200.10.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookColumnsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GradeColumnV2}
     */
    learnApiPublicV2CoursesCourseIdGradebookColumnsPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GradeColumnV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/columns', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGradebookUsersUserIdGet operation.
     * @callback module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookUsersUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20020} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User Grades
     * Loads the course grades for a specific user.  Users with entitlement \&quot;course.gradebook.MODIFY\&quot; have read access to all the properties of the collection results.  Users without entitlement \&quot;course.gradebook.MODIFY\&quot; requesting grades for themselves (i.e., userId &#x3D; current user id) have read access to a restricted subset of properties of the collections result. These are the properties available to a student when requesting his or her own grades:  - userId - columnId - status - text - score - exempt - feedback  **Since**: 3300.0.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGradesApi~learnApiPublicV2CoursesCourseIdGradebookUsersUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20020}
     */
    learnApiPublicV2CoursesCourseIdGradebookUsersUserIdGet(courseId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'userId': userId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20020;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/gradebook/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
