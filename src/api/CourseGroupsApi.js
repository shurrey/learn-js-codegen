/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body33 from '../model/Body33';
import Body34 from '../model/Body34';
import Body35 from '../model/Body35';
import Body36 from '../model/Body36';
import Body37 from '../model/Body37';
import GroupV2 from '../model/GroupV2';
import InlineResponse20023 from '../model/InlineResponse20023';
import RestException from '../model/RestException';

/**
* CourseGroups service.
* @module api/CourseGroupsApi
* @version 3900.6.0
*/
export default class CourseGroupsApi {

    /**
    * Constructs a new CourseGroupsApi. 
    * @alias module:api/CourseGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGet operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20023} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Groups
     * Returns a list of all top-level groups in the specified course.  Callers with the following entitlement can view all groups in the course:  - course.groups.VIEW Callers enrolled in course can view all groups they&#x27;re enrolled in, and all self-enrollment groups  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20023}
     */
    learnApiPublicV2CoursesCourseIdGroupsGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20023;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdDelete operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Group
     * Deletes a groupset from the specified course.  Required entitlements:  - course.group.DELETE  **Since**: 3800.6.0
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdDelete(groupId, courseId, callback) {
      let postBody = null;

      let pathParams = {
        'groupId': groupId,
        'courseId': courseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdGet operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group
     * Loads a group in the specified course.  Callers not enrolled in the course must have the following entitlement:  - course.groups.VIEW  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdGet(courseId, groupId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsGroupIdPatch operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Group
     * Updates a group in the specified course.  Minimal entitlements required:  - course.group.MODIFY  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsGroupIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsGroupIdPatch(body, courseId, groupId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/{groupId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsPost operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Group
     * Creates a group in the specified course.  Callers must have the following entitlement:  - &#x27;course.groups.CREATE&#x27;  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsGet operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20023} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group Sets
     * Returns a list of all groupsets  Callers not enrolled in the course must have the following entitlement:  - course.groups.VIEW - course.groups.admin.VIEW  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20023}
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsGet(courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20023;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdDelete operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Group Set
     * Deletes a groupset from the specified course.  Required entitlements:  - course.group.DELETE  **Since**: 3800.6.0
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdDelete(courseId, groupId, callback) {
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGet operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group Set
     * Loads a groupset in the specified course.  Users calling this end point should meet at least one of these entitlement checks.  - course.groups.VIEW - course.groups.admin.VIEW  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGet(courseId, groupId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'groupId': groupId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsGet operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20023} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group Set Children
     * Returns a list of all groups within a groupset  Callers not enrolled in the group must have the following entitlement:  - course.groups.VIEW  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20023}
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsGet(groupId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'groupId': groupId,
        'courseId': courseId
      };
      let queryParams = {
        'created': opts['created'],
        'createdCompare': opts['createdCompare'],
        'modified': opts['modified'],
        'modifiedCompare': opts['modifiedCompare'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20023;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsPost operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Group Set Child
     * Creates a group within a groupset.  Callers must have the following entitlement:  - &#x27;course.groups.CREATE&#x27;  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdGroupsPost(body, groupId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'groupId': groupId,
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}/groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdPatch operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Group Set
     * Updates a groupset in the specified course.  Minimal entitlements required:  - course.group.MODIFY  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsGroupIdPatch(body, groupId, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'groupId': groupId,
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV2CoursesCourseIdGroupsSetsPost operation.
     * @callback module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Group Set
     * Creates a groupset in the specified course.  Callers must have the following entitlement:  - &#x27;course.groups.CREATE&#x27;  **Since**: 3800.6.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseGroupsApi~learnApiPublicV2CoursesCourseIdGroupsSetsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupV2}
     */
    learnApiPublicV2CoursesCourseIdGroupsSetsPost(body, courseId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GroupV2;

      return this.apiClient.callApi(
        '/learn/api/public/v2/courses/{courseId}/groups/sets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
