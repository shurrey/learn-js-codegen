/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body17 from '../model/Body17';
import Body18 from '../model/Body18';
import InlineResponse20010 from '../model/InlineResponse20010';
import Question from '../model/Question';
import RestException from '../model/RestException';

/**
* CourseAssessments service.
* @module api/CourseAssessmentsApi
* @version 3900.6.0
*/
export default class CourseAssessmentsApi {

    /**
    * Constructs a new CourseAssessmentsApi. 
    * @alias module:api/CourseAssessmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsGet operation.
     * @callback module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20010} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Questions
     * Get the list of questions for an Ultra Assessment.  Either &#x27;course.assessment.CREATE&#x27; or &#x27;course.assessment.MODIFY&#x27; entitlement is needed to view questions. If the assessment has the external submissions setting enabled, then either the &#x27;course.assessment.VIEW&#x27; or &#x27;course.assessment.EXECUTE&#x27; entitlement is needed to view questions, and only presentation questions are returned.  **Since**: 3300.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20010}
     */
    learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsGet(courseId, assessmentId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'assessmentId': assessmentId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20010;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsPost operation.
     * @callback module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Question} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Question
     * Creates a question for an Ultra Assessment.  The &#x27;course.assessment.MODIFY&#x27; entitlement is needed to create a question.  **Since**: 3300.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Question}
     */
    learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsPost(body, courseId, assessmentId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'assessmentId': assessmentId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Question;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdDelete operation.
     * @callback module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Question
     * Delete a question, specified by Id, from an Ultra Assessment.  The &#x27;course.assessment.DELETE&#x27; entitlement is needed to perform the operation.  **Since**: 3300.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdDelete(courseId, assessmentId, questionId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'assessmentId': assessmentId,
        'questionId': questionId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdGet operation.
     * @callback module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Question} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Question By Id
     * Get a question by Id from an Ultra Assessment.  Either &#x27;course.assessment.CREATE&#x27; or &#x27;course.assessment.MODIFY&#x27; entitlement is needed to view a question.  **Since**: 3300.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Question}
     */
    learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdGet(courseId, assessmentId, questionId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'courseId': courseId,
        'assessmentId': assessmentId,
        'questionId': questionId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Question;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdPatch operation.
     * @callback module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Question} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Question
     * Update a question, specified by Id, from an Ultra Assessment.  The &#x27;course.assessment.MODIFY&#x27; entitlement is needed to perform the operation.  **Since**: 3300.9.0
     * @param {Object} opts Optional parameters
     * @param {module:api/CourseAssessmentsApi~learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Question}
     */
    learnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdPatch(body, courseId, assessmentId, questionId, opts, callback) {
      opts = opts || {};
      let postBody = body;

      let pathParams = {
        'courseId': courseId,
        'assessmentId': assessmentId,
        'questionId': questionId
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Question;

      return this.apiClient.callApi(
        '/learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
