/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Duration4 model module.
* @module model/Duration4
* @version 3900.6.0
*/
export default class Duration4 {
    /**
    * Constructs a new <code>Duration4</code>.
    * Settings controlling the length of time the course is available.
    * @alias module:model/Duration4
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Duration4</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Duration4} obj Optional instance to populate.
    * @return {module:model/Duration4} The populated <code>Duration4</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Duration4();
                        
            
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
            if (data.hasOwnProperty('daysOfUse')) {
                obj['daysOfUse'] = ApiClient.convertToType(data['daysOfUse'], 'Number');
            }
        }
        return obj;
    }

    /**
    * The intended length of the course.   | Type      | Description  | --------- | --------- | | Continuous | Course is active on an ongoing basis. | | DateRange | Course is only intended to be available between specific date ranges | | FixedNumDays | Course is only available for a set number of days | | Term | Course availablity is dictated by its associated term | 
    * @member {module:model/Duration4.TypeEnum} type
    */
    'type' = undefined;
    /**
    * The date this course starts. May only be set if availability.duration.type is DateRange.
    * @member {Date} start
    */
    'start' = undefined;
    /**
    * The date this course ends. May only be set if availability.duration.type is DateRange.
    * @member {Date} end
    */
    'end' = undefined;
    /**
    * The number of days this course can be used. May only be set if availability.duration.type is FixedNumDays.
    * @member {Number} daysOfUse
    */
    'daysOfUse' = undefined;



    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
        /**
         * value: "Continuous"
         * @const
         */
        "Continuous": "Continuous",
        /**
         * value: "DateRange"
         * @const
         */
        "DateRange": "DateRange",
        /**
         * value: "FixedNumDays"
         * @const
         */
        "FixedNumDays": "FixedNumDays",
        /**
         * value: "Term"
         * @const
         */
        "Term": "Term"    };

}
