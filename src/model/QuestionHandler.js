/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The QuestionHandler model module.
* @module model/QuestionHandler
* @version 3900.6.0
*/
export default class QuestionHandler {
    /**
    * Constructs a new <code>QuestionHandler</code>.
    * @alias module:model/QuestionHandler
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>QuestionHandler</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/QuestionHandler} obj Optional instance to populate.
    * @return {module:model/QuestionHandler} The populated <code>QuestionHandler</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuestionHandler();
                        
            
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * Type of Question supported.   | Type      | Description  | --------- | --------- | | Presentation |   **Since**: 3300.9.0 | | EitherOr | Read Only  **Since**: 3300.9.0 | | Essay | Read Only  **Since**: 3300.9.0 | | MultipleAnswer | Read Only  **Since**: 3400.4.0 | | Numeric | Read Only  **Since**: 3400.4.0 | | MultipleChoice | Read Only  **Since**: 3400.4.0 | | Ordering | Read Only  **Since**: 3400.4.0 | | Matching | Read Only  **Since**: 3400.4.0 | | FillInTheBlank | Read Only  **Since**: 3400.4.0 | | Calculated | Read Only  **Since**: 3400.4.0 | | FileResponse | Read Only  **Since**: 3400.4.0 | | LikertOpinionScale | Read Only  **Since**: 3400.4.0 | | QuizBowl | Read Only  **Since**: 3400.4.0 | | HotSpot | Read Only  **Since**: 3400.4.0 | | JumbledSentence | Read Only  **Since**: 3400.4.0 | | FillInTheBlankPlus | Read Only  **Since**: 3400.4.0 | | QuestionBlock | Read Only  **Since**: 3700.2.0 | 
    * @member {module:model/QuestionHandler.TypeEnum} type
    */
    'type' = undefined;



    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
        /**
         * value: "Presentation"
         * @const
         */
        "Presentation": "Presentation",
        /**
         * value: "EitherOr"
         * @const
         */
        "EitherOr": "EitherOr",
        /**
         * value: "Essay"
         * @const
         */
        "Essay": "Essay",
        /**
         * value: "MultipleAnswer"
         * @const
         */
        "MultipleAnswer": "MultipleAnswer",
        /**
         * value: "Numeric"
         * @const
         */
        "Numeric": "Numeric",
        /**
         * value: "MultipleChoice"
         * @const
         */
        "MultipleChoice": "MultipleChoice",
        /**
         * value: "Ordering"
         * @const
         */
        "Ordering": "Ordering",
        /**
         * value: "Matching"
         * @const
         */
        "Matching": "Matching",
        /**
         * value: "FillInTheBlank"
         * @const
         */
        "FillInTheBlank": "FillInTheBlank",
        /**
         * value: "Calculated"
         * @const
         */
        "Calculated": "Calculated",
        /**
         * value: "FileResponse"
         * @const
         */
        "FileResponse": "FileResponse",
        /**
         * value: "LikertOpinionScale"
         * @const
         */
        "LikertOpinionScale": "LikertOpinionScale",
        /**
         * value: "QuizBowl"
         * @const
         */
        "QuizBowl": "QuizBowl",
        /**
         * value: "HotSpot"
         * @const
         */
        "HotSpot": "HotSpot",
        /**
         * value: "JumbledSentence"
         * @const
         */
        "JumbledSentence": "JumbledSentence",
        /**
         * value: "FillInTheBlankPlus"
         * @const
         */
        "FillInTheBlankPlus": "FillInTheBlankPlus",
        /**
         * value: "QuestionBlock"
         * @const
         */
        "QuestionBlock": "QuestionBlock"    };

}
