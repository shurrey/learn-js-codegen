/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Availability from './Availability';

/**
* The Body38 model module.
* @module model/Body38
* @version 3900.6.0
*/
export default class Body38 {
    /**
    * Constructs a new <code>Body38</code>.
    * @alias module:model/Body38
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body38</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body38} obj Optional instance to populate.
    * @return {module:model/Body38} The populated <code>Body38</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body38();
                        
            
            if (data.hasOwnProperty('childCourseId')) {
                obj['childCourseId'] = ApiClient.convertToType(data['childCourseId'], 'String');
            }
            if (data.hasOwnProperty('dataSourceId')) {
                obj['dataSourceId'] = ApiClient.convertToType(data['dataSourceId'], 'String');
            }
            if (data.hasOwnProperty('availability')) {
                obj['availability'] = Availability.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('courseRoleId')) {
                obj['courseRoleId'] = ApiClient.convertToType(data['courseRoleId'], 'String');
            }
        }
        return obj;
    }

    /**
    * The primary ID of the child, cross-listed course, in which the user is directly enrolled. </p> This field is read only in Learn versions 3000.11.0 through 3400.0.0. As of 3400.1.0, this field is mutable.  </p> If this membership's course is a parent course in a cross-listed set, the childCourseId can be updated to move the membership enrollment between child courses and the parent course in  the set.  Patching the childCourseId to \"null\" will move the membership to the parent course.  **Since**: 3000.11.0
    * @member {String} childCourseId
    */
    'childCourseId' = undefined;
    /**
    * The ID of the data source associated with this course.  This may optionally be the data source's externalId using the syntax \"externalId:math101\".
    * @member {String} dataSourceId
    */
    'dataSourceId' = undefined;
    /**
    * @member {module:model/Availability} availability
    */
    'availability' = undefined;
    /**
    * The user's role in the course.  These roles are also valid for an organization, although they are named differently in the UI.  Custom course roles may also be referenced by their IDs.   | Type      | Description  | --------- | --------- | | Instructor | Has access to all areas in the Control Panel. This role is generally given to those developing, teaching, or facilitating the class. Instructors may access a course that is unavailable to students. This role is customizable and may have different capabilities from what is documented here. | | BbFacilitator | The facilitator is an instructor like role. Facilitators are restricted versions of an instructor, in that they are able to deliver course instruction and administer all aspects of a pre-constructed course, but are not allowed to modify or alter the course. This role is customizable and may have different capabilities from what is documented here. | | TeachingAssistant | The teaching assistant role is that of a co-teacher. Teaching assistants are able to administer all areas of a course. Their only limitations are those imposed by the instructor or Blackboard administrator at your school. This role is customizable and may have different capabilities from what is documented here. | | CourseBuilder | Manages the course without having access to student grades. This role is customizable and may have different capabilities from what is documented here. | | Grader | Assists the instructor in the creation, management, delivery, and grading of items. This role is customizable and may have different capabilities from what is documented here. | | Student |  | | Guest | Has no access to the Control Panel. Areas within the course are made available to guests, but typically they can only view course materials; they do not have access to tests or assessments, and do not have permission to post on discussion boards. This role's behavior is immutable. | 
    * @member {module:model/Body38.CourseRoleIdEnum} courseRoleId
    */
    'courseRoleId' = undefined;



    /**
    * Allowed values for the <code>courseRoleId</code> property.
    * @enum {String}
    * @readonly
    */
    static CourseRoleIdEnum = {
        /**
         * value: "Instructor"
         * @const
         */
        "Instructor": "Instructor",
        /**
         * value: "BbFacilitator"
         * @const
         */
        "BbFacilitator": "BbFacilitator",
        /**
         * value: "TeachingAssistant"
         * @const
         */
        "TeachingAssistant": "TeachingAssistant",
        /**
         * value: "CourseBuilder"
         * @const
         */
        "CourseBuilder": "CourseBuilder",
        /**
         * value: "Grader"
         * @const
         */
        "Grader": "Grader",
        /**
         * value: "Student"
         * @const
         */
        "Student": "Student",
        /**
         * value: "Guest"
         * @const
         */
        "Guest": "Guest"    };

}
