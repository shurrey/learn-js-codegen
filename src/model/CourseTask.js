/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The CourseTask model module.
* @module model/CourseTask
* @version 3900.6.0
*/
export default class CourseTask {
    /**
    * Constructs a new <code>CourseTask</code>.
    * @alias module:model/CourseTask
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>CourseTask</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/CourseTask} obj Optional instance to populate.
    * @return {module:model/CourseTask} The populated <code>CourseTask</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CourseTask();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('percentComplete')) {
                obj['percentComplete'] = ApiClient.convertToType(data['percentComplete'], 'Number');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Date');
            }
        }
        return obj;
    }

    /**
    * The ID of this task.
    * @member {String} id
    */
    'id' = undefined;
    /**
    * The status of the task.   | Type      | Description  | --------- | --------- | | Queued | initial state of a task | | Assigned |  | | Running |  | | Complete |  | | CompleteWithErrors |  | | Incomplete |  | 
    * @member {module:model/CourseTask.StatusEnum} status
    */
    'status' = undefined;
    /**
    * Task progress, with 0 representing not started and 100 representing done.
    * @member {Number} percentComplete
    */
    'percentComplete' = undefined;
    /**
    * The date the task was started.
    * @member {Date} started
    */
    'started' = undefined;



    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "Queued"
         * @const
         */
        "Queued": "Queued",
        /**
         * value: "Assigned"
         * @const
         */
        "Assigned": "Assigned",
        /**
         * value: "Running"
         * @const
         */
        "Running": "Running",
        /**
         * value: "Complete"
         * @const
         */
        "Complete": "Complete",
        /**
         * value: "CompleteWithErrors"
         * @const
         */
        "CompleteWithErrors": "CompleteWithErrors",
        /**
         * value: "Incomplete"
         * @const
         */
        "Incomplete": "Incomplete"    };

}
