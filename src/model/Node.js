/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Node model module.
* @module model/Node
* @version 3900.6.0
*/
export default class Node {
    /**
    * Constructs a new <code>Node</code>.
    * @alias module:model/Node
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Node</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Node} obj Optional instance to populate.
    * @return {module:model/Node} The populated <code>Node</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Node();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'String');
            }
        }
        return obj;
    }

    /**
    * The primary ID of the Node in the database
    * @member {String} id
    */
    'id' = undefined;
    /**
    * Node unique identifier
    * @member {String} externalId
    */
    'externalId' = undefined;
    /**
    * Node display name
    * @member {String} title
    */
    'title' = undefined;
    /**
    * Node description
    * @member {String} description
    */
    'description' = undefined;
    /**
    * The ID of the Node parent in the database
    * @member {String} parentId
    */
    'parentId' = undefined;




}
