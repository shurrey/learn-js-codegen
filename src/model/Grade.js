/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Grade model module.
* @module model/Grade
* @version 3900.6.0
*/
export default class Grade {
    /**
    * Constructs a new <code>Grade</code>.
    * @alias module:model/Grade
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Grade</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Grade} obj Optional instance to populate.
    * @return {module:model/Grade} The populated <code>Grade</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Grade();
                        
            
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('columnId')) {
                obj['columnId'] = ApiClient.convertToType(data['columnId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('overridden')) {
                obj['overridden'] = ApiClient.convertToType(data['overridden'], 'Date');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = ApiClient.convertToType(data['feedback'], 'String');
            }
            if (data.hasOwnProperty('exempt')) {
                obj['exempt'] = ApiClient.convertToType(data['exempt'], 'Boolean');
            }
            if (data.hasOwnProperty('corrupt')) {
                obj['corrupt'] = ApiClient.convertToType(data['corrupt'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * The user ID associated with this grade.
    * @member {String} userId
    */
    'userId' = undefined;
    /**
    * The grade column ID for this grade.
    * @member {String} columnId
    */
    'columnId' = undefined;
    /**
    * The status of this grade.   | Type      | Description  | --------- | --------- | | Graded | Grade has been graded, corresponding to dbValue 1 | | NeedsGrading | Grade needs grading, corresponding to dbValue 2 | 
    * @member {module:model/Grade.StatusEnum} status
    */
    'status' = undefined;
    /**
    * The text representation of this grade.
    * @member {String} text
    */
    'text' = undefined;
    /**
    * The score associated with this grade.
    * @member {Number} score
    */
    'score' = undefined;
    /**
    * The date on which the score associated with this grade was last overridden.  An ISODate value is only returned if this grade is currently overridden; otherwise, returns null.
    * @member {Date} overridden
    */
    'overridden' = undefined;
    /**
    * The instructor notes associated with this grade. This notes field is used for grades on manual grade columns.   That is, when column.grading.type = Manual.  It is also used when column.grading.type = Attempts and the grade has been manually overridden.
    * @member {String} notes
    */
    'notes' = undefined;
    /**
    * The instructor feedback associated with this grade.  This feedback is used for grades on manual grade columns.   That is, when column.grading.type = Manual.  It is also used when column.grading.type = Attempts and the grade has been manually overridden.
    * @member {String} feedback
    */
    'feedback' = undefined;
    /**
    * Whether the score associated with this grade is ignored when computing the course grade.
    * @member {Boolean} exempt
    */
    'exempt' = undefined;
    /**
    * Whether the grade for a calculated column could be successfully computed.
    * @member {Boolean} corrupt
    */
    'corrupt' = undefined;



    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "Graded"
         * @const
         */
        "Graded": "Graded",
        /**
         * value: "NeedsGrading"
         * @const
         */
        "NeedsGrading": "NeedsGrading"    };

}
