/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CalendarItemRecurrence from './CalendarItemRecurrence';
import DynamicCalendarItemProps from './DynamicCalendarItemProps';

/**
* The Body8 model module.
* @module model/Body8
* @version 3900.6.0
*/
export default class Body8 {
    /**
    * Constructs a new <code>Body8</code>.
    * @alias module:model/Body8
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body8</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body8} obj Optional instance to populate.
    * @return {module:model/Body8} The populated <code>Body8</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body8();
                        
            
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
            if (data.hasOwnProperty('disableResizing')) {
                obj['disableResizing'] = ApiClient.convertToType(data['disableResizing'], 'Boolean');
            }
            if (data.hasOwnProperty('dynamicCalendarItemProps')) {
                obj['dynamicCalendarItemProps'] = DynamicCalendarItemProps.constructFromObject(data['dynamicCalendarItemProps']);
            }
            if (data.hasOwnProperty('recurrence')) {
                obj['recurrence'] = CalendarItemRecurrence.constructFromObject(data['recurrence']);
            }
        }
        return obj;
    }

    /**
    * Title of the calendar item. Title length cannot exceed 255 characters.
    * @member {String} title
    */
    'title' = undefined;
    /**
    * Description of the calendar item.
    * @member {String} description
    */
    'description' = undefined;
    /**
    * Location of the calendar item and it cannot exceed 1024 characters.
    * @member {String} location
    */
    'location' = undefined;
    /**
    * Start date of the calendar item either in the past if the calendar item is for an event that's already started OR in the future if it's for an event to start in the future. This is always set and should occur before the end date.
    * @member {Date} start
    */
    'start' = undefined;
    /**
    * End date of the calendar item either in the past if the calendar item is for an event that's already end OR in the future if it's for an event to end in the future. This is always set and should occur after the start date.
    * @member {Date} end
    */
    'end' = undefined;
    /**
    * Whether resizing of the calendar item should NOT be allowed.
    * @member {Boolean} disableResizing
    */
    'disableResizing' = undefined;
    /**
    * @member {module:model/DynamicCalendarItemProps} dynamicCalendarItemProps
    */
    'dynamicCalendarItemProps' = undefined;
    /**
    * @member {module:model/CalendarItemRecurrence} recurrence
    */
    'recurrence' = undefined;




}
