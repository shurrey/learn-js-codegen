/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body31 model module.
* @module model/Body31
* @version 3900.6.0
*/
export default class Body31 {
    /**
    * Constructs a new <code>Body31</code>.
    * @alias module:model/Body31
    * @class
    * @param title {String} The title of the grading period. Length is limited to 64 characters.
    */

    constructor(title) {
        
        
        this['title'] = title;
        
    }

    /**
    * Constructs a <code>Body31</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body31} obj Optional instance to populate.
    * @return {module:model/Body31} The populated <code>Body31</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body31();
                        
            
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('dateMode')) {
                obj['dateMode'] = ApiClient.convertToType(data['dateMode'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
        }
        return obj;
    }

    /**
    * The title of the grading period. Length is limited to 64 characters.
    * @member {String} title
    */
    'title' = undefined;
    /**
    * The description of the grading period. Length is limited to 1000 characters.
    * @member {String} description
    */
    'description' = undefined;
    /**
    * The relative position of the grading period to other grading periods when viewed in the grade book.
    * @member {Number} position
    */
    'position' = undefined;
    /**
    * Property may be set to DoNotUseDates to explicitly blank dates,  in which case startDate and endDate are ignored; otherwise set to  UseDates; in this case startDate and endDate must be included and valid.   | Type      | Description  | --------- | --------- | | DoNotUseDates | Do not use dates | | UseDates | Use dates | 
    * @member {module:model/Body31.DateModeEnum} dateMode
    */
    'dateMode' = undefined;
    /**
    * If start and end are set, and start is before end, these define temporal  coverage of grading period which may be used to associate GradableItems (Columns) by due date. Start dates will be persisted as starting at  00:00:00 on the submitted day.
    * @member {Date} start
    */
    'start' = undefined;
    /**
    * If start and end are set, and start is before end, these define temporal  coverage of grading period which may be used to associate GradableItems (Columns) by due date. End dates will be persisted as ending at  23:59:59 on the submitted day.
    * @member {Date} end
    */
    'end' = undefined;



    /**
    * Allowed values for the <code>dateMode</code> property.
    * @enum {String}
    * @readonly
    */
    static DateModeEnum = {
        /**
         * value: "DoNotUseDates"
         * @const
         */
        "DoNotUseDates": "DoNotUseDates",
        /**
         * value: "UseDates"
         * @const
         */
        "UseDates": "UseDates"    };

}
