/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnonymousGrading from './AnonymousGrading';

/**
* The Grading3 model module.
* @module model/Grading3
* @version 3900.6.0
*/
export default class Grading3 {
    /**
    * Constructs a new <code>Grading3</code>.
    * Settings controlling whether numerical and text grade values for this grade column are calculated, determined based on attempts, or manually entered.
    * @alias module:model/Grading3
    * @class
    * @param type {module:model/Grading3.TypeEnum} The type of Grading settings for this Grade Column.   | Type      | Description  | --------- | --------- | | Attempts | Indicates score and grade values are determined based on user attempts | | Calculated | Indicates score and grade values are determined by applying a calculated formula. | | Manual | Indicates score and grade values are manually entered. | 
    * @param anonymousGrading {module:model/AnonymousGrading} 
    */

    constructor(type, anonymousGrading) {
        
        
        this['type'] = type;
        this['anonymousGrading'] = anonymousGrading;
        
    }

    /**
    * Constructs a <code>Grading3</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Grading3} obj Optional instance to populate.
    * @return {module:model/Grading3} The populated <code>Grading3</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Grading3();
                        
            
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('due')) {
                obj['due'] = ApiClient.convertToType(data['due'], 'Date');
            }
            if (data.hasOwnProperty('attemptsAllowed')) {
                obj['attemptsAllowed'] = ApiClient.convertToType(data['attemptsAllowed'], 'Number');
            }
            if (data.hasOwnProperty('scoringModel')) {
                obj['scoringModel'] = ApiClient.convertToType(data['scoringModel'], 'String');
            }
            if (data.hasOwnProperty('anonymousGrading')) {
                obj['anonymousGrading'] = AnonymousGrading.constructFromObject(data['anonymousGrading']);
            }
        }
        return obj;
    }

    /**
    * The type of Grading settings for this Grade Column.   | Type      | Description  | --------- | --------- | | Attempts | Indicates score and grade values are determined based on user attempts | | Calculated | Indicates score and grade values are determined by applying a calculated formula. | | Manual | Indicates score and grade values are manually entered. | 
    * @member {module:model/Grading3.TypeEnum} type
    */
    'type' = undefined;
    /**
    * The date on which attempts are due for the grade column.
    * @member {Date} due
    */
    'due' = undefined;
    /**
    * Number of attempts allowed for the grade column.
    * @member {Number} attemptsAllowed
    */
    'attemptsAllowed' = undefined;
    /**
    * The scoring model for the submitted grade column attempts.   | Type      | Description  | --------- | --------- | | Last |  | | Highest |  | | Lowest |  | | First |  | | Average |  | 
    * @member {module:model/Grading3.ScoringModelEnum} scoringModel
    */
    'scoringModel' = undefined;
    /**
    * @member {module:model/AnonymousGrading} anonymousGrading
    */
    'anonymousGrading' = undefined;



    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
        /**
         * value: "Attempts"
         * @const
         */
        "Attempts": "Attempts",
        /**
         * value: "Calculated"
         * @const
         */
        "Calculated": "Calculated",
        /**
         * value: "Manual"
         * @const
         */
        "Manual": "Manual"    };
    /**
    * Allowed values for the <code>scoringModel</code> property.
    * @enum {String}
    * @readonly
    */
    static ScoringModelEnum = {
        /**
         * value: "Last"
         * @const
         */
        "Last": "Last",
        /**
         * value: "Highest"
         * @const
         */
        "Highest": "Highest",
        /**
         * value: "Lowest"
         * @const
         */
        "Lowest": "Lowest",
        /**
         * value: "First"
         * @const
         */
        "First": "First",
        /**
         * value: "Average"
         * @const
         */
        "Average": "Average"    };

}
