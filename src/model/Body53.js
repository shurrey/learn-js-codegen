/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Availability8 from './Availability8';

/**
* The Body53 model module.
* @module model/Body53
* @version 3900.6.0
*/
export default class Body53 {
    /**
    * Constructs a new <code>Body53</code>.
    * @alias module:model/Body53
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body53</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body53} obj Optional instance to populate.
    * @return {module:model/Body53} The populated <code>Body53</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body53();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('iconUrl')) {
                obj['iconUrl'] = ApiClient.convertToType(data['iconUrl'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('authorId')) {
                obj['authorId'] = ApiClient.convertToType(data['authorId'], 'String');
            }
            if (data.hasOwnProperty('instructorCreated')) {
                obj['instructorCreated'] = ApiClient.convertToType(data['instructorCreated'], 'Boolean');
            }
            if (data.hasOwnProperty('allowStudents')) {
                obj['allowStudents'] = ApiClient.convertToType(data['allowStudents'], 'Boolean');
            }
            if (data.hasOwnProperty('allowGrading')) {
                obj['allowGrading'] = ApiClient.convertToType(data['allowGrading'], 'Boolean');
            }
            if (data.hasOwnProperty('availability')) {
                obj['availability'] = Availability8.constructFromObject(data['availability']);
            }
            if (data.hasOwnProperty('launchInNewWindow')) {
                obj['launchInNewWindow'] = ApiClient.convertToType(data['launchInNewWindow'], 'Boolean');
            }
            if (data.hasOwnProperty('customParameters')) {
                obj['customParameters'] = ApiClient.convertToType(data['customParameters'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
    * The name of the placement. Not required to be unique. Maximum length of 50 characters, BAD_REQUEST error with message is returned if greater than 50 characters.
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The description of the placement. Not required to be unique. Maximum length is 1000 characters, BAD_REQUEST error with message is returned if greater than 1000 characters.
    * @member {String} description
    */
    'description' = undefined;
    /**
    * The URL of the icon for this placement, if any. Not required to be unique, must be a complete and valid URL. Maximum length is 255 characters, BAD_REQUEST error with message is returned if greater than 255 characters or incomplete URL.
    * @member {String} iconUrl
    */
    'iconUrl' = undefined;
    /**
    * The URL of the tool provider. Not required to be unique, must be a complete and valid URL. Maximum length is 1024 characters, BAD_REQUEST error with message is returned if greater than 1024 characters or incomplete URL.
    * @member {String} url
    */
    'url' = undefined;
    /**
    * @member {String} key
    */
    'key' = undefined;
    /**
    * @member {String} secret
    */
    'secret' = undefined;
    /**
    * Id of the creator of the placement  **Deprecated**: since 3900.0 not used
    * @member {String} authorId
    */
    'authorId' = undefined;
    /**
    * Whether an instructor created the placement or not (otherwise admin)  **Deprecated**: since 3900.0 not used
    * @member {Boolean} instructorCreated
    */
    'instructorCreated' = undefined;
    /**
    * Whether the course tool is visible by students, or only to non-students (e.g. instructors). Defaults to true, allowing students to see the tool.
    * @member {Boolean} allowStudents
    */
    'allowStudents' = undefined;
    /**
    * Whether this placement can accept grades from the tool provider and a grade column can be created for it. This only applies to Enum[Type]#`ContentHandler` types. All others don't support grading and will be set to false.
    * @member {Boolean} allowGrading
    */
    'allowGrading' = undefined;
    /**
    * @member {module:model/Availability8} availability
    */
    'availability' = undefined;
    /**
    * Whether this placement link should be opened in a new window or not.
    * @member {Boolean} launchInNewWindow
    */
    'launchInNewWindow' = undefined;
    /**
    * Custom launch parameters for the tool.
    * @member {Object.<String, String>} customParameters
    */
    'customParameters' = undefined;




}
