/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body54 model module.
* @module model/Body54
* @version 3900.6.0
*/
export default class Body54 {
    /**
    * Constructs a new <code>Body54</code>.
    * @alias module:model/Body54
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body54</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body54} obj Optional instance to populate.
    * @return {module:model/Body54} The populated <code>Body54</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body54();
                        
            
            if (data.hasOwnProperty('primaryDomain')) {
                obj['primaryDomain'] = ApiClient.convertToType(data['primaryDomain'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('sendUserDataType')) {
                obj['sendUserDataType'] = ApiClient.convertToType(data['sendUserDataType'], 'String');
            }
            if (data.hasOwnProperty('sendRole')) {
                obj['sendRole'] = ApiClient.convertToType(data['sendRole'], 'Boolean');
            }
            if (data.hasOwnProperty('sendName')) {
                obj['sendName'] = ApiClient.convertToType(data['sendName'], 'Boolean');
            }
            if (data.hasOwnProperty('sendEmail')) {
                obj['sendEmail'] = ApiClient.convertToType(data['sendEmail'], 'Boolean');
            }
            if (data.hasOwnProperty('useSplashScreen')) {
                obj['useSplashScreen'] = ApiClient.convertToType(data['useSplashScreen'], 'Boolean');
            }
            if (data.hasOwnProperty('allowMembershipService')) {
                obj['allowMembershipService'] = ApiClient.convertToType(data['allowMembershipService'], 'Boolean');
            }
            if (data.hasOwnProperty('allowGradesService')) {
                obj['allowGradesService'] = ApiClient.convertToType(data['allowGradesService'], 'Boolean');
            }
            if (data.hasOwnProperty('publicKey')) {
                obj['publicKey'] = ApiClient.convertToType(data['publicKey'], 'String');
            }
            if (data.hasOwnProperty('jwksUrl')) {
                obj['jwksUrl'] = ApiClient.convertToType(data['jwksUrl'], 'String');
            }
            if (data.hasOwnProperty('customParameters')) {
                obj['customParameters'] = ApiClient.convertToType(data['customParameters'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
    * The primary domain name associated with this configuration.
    * @member {String} primaryDomain
    */
    'primaryDomain' = undefined;
    /**
    * The client id associated with this configuration. Only applicable for LTI versions 1.3+, excluding 2.0  **Since**: 3600.0.0
    * @member {String} clientId
    */
    'clientId' = undefined;
    /**
    * @member {String} key
    */
    'key' = undefined;
    /**
    * @member {String} secret
    */
    'secret' = undefined;
    /**
    * Enum that indicates if the set of domains associated with this config can or cannot be linked to.   | Type      | Description  | --------- | --------- | | Approved |  | | Excluded |  | | NeedsApproval |   **Since**: 3300.9.0 | 
    * @member {module:model/Body54.StatusEnum} status
    */
    'status' = undefined;
    /**
    * Enum indicating when user data can be sent to the LTI tool provider.   | Type      | Description  | --------- | --------- | | Never |  | | Sslonly |  | | Always |   **Since**: 3300.9.0 | 
    * @member {module:model/Body54.SendUserDataTypeEnum} sendUserDataType
    */
    'sendUserDataType' = undefined;
    /**
    * Whether the user's role can be sent to the LTI tool provider.
    * @member {Boolean} sendRole
    */
    'sendRole' = undefined;
    /**
    * Whether the user's name can be sent to the LTI tool provider.
    * @member {Boolean} sendName
    */
    'sendName' = undefined;
    /**
    * Whether the user's email address can be sent to the LTI tool provider.
    * @member {Boolean} sendEmail
    */
    'sendEmail' = undefined;
    /**
    * Whether a splash screen is shown before launching the LTI link.  Cannot be set to true if allowMembershipService is true.
    * @member {Boolean} useSplashScreen
    */
    'useSplashScreen' = undefined;
    /**
    * Whether the Tool is allowed to call the LTI Names and Roles service and get the course memberships.
    * @member {Boolean} allowMembershipService
    */
    'allowMembershipService' = undefined;
    /**
    * Whether the Tool is allowed to call the LTI Assignment and Grades service and manage line items and grades.  **Since**: 3600.0.0
    * @member {Boolean} allowGradesService
    */
    'allowGradesService' = undefined;
    /**
    * The public key of the tool, if specified. It is optional and can be null  **Since**: 3800.17.0
    * @member {String} publicKey
    */
    'publicKey' = undefined;
    /**
    * The JWKS URL of the tool, if specified. It is optional and can be null  **Since**: 3800.17.0
    * @member {String} jwksUrl
    */
    'jwksUrl' = undefined;
    /**
    * The custom parameters for the given domain.
    * @member {Object.<String, String>} customParameters
    */
    'customParameters' = undefined;



    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "Approved"
         * @const
         */
        "Approved": "Approved",
        /**
         * value: "Excluded"
         * @const
         */
        "Excluded": "Excluded",
        /**
         * value: "NeedsApproval"
         * @const
         */
        "NeedsApproval": "NeedsApproval"    };
    /**
    * Allowed values for the <code>sendUserDataType</code> property.
    * @enum {String}
    * @readonly
    */
    static SendUserDataTypeEnum = {
        /**
         * value: "Never"
         * @const
         */
        "Never": "Never",
        /**
         * value: "Sslonly"
         * @const
         */
        "Sslonly": "Sslonly",
        /**
         * value: "Always"
         * @const
         */
        "Always": "Always"    };

}
