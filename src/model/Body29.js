/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body29 model module.
* @module model/Body29
* @version 3900.6.0
*/
export default class Body29 {
    /**
    * Constructs a new <code>Body29</code>.
    * @alias module:model/Body29
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body29</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body29} obj Optional instance to populate.
    * @return {module:model/Body29} The populated <code>Body29</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body29();
                        
            
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('reconciliationMode')) {
                obj['reconciliationMode'] = ApiClient.convertToType(data['reconciliationMode'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = ApiClient.convertToType(data['feedback'], 'String');
            }
            if (data.hasOwnProperty('studentComments')) {
                obj['studentComments'] = ApiClient.convertToType(data['studentComments'], 'String');
            }
            if (data.hasOwnProperty('studentSubmission')) {
                obj['studentSubmission'] = ApiClient.convertToType(data['studentSubmission'], 'String');
            }
            if (data.hasOwnProperty('exempt')) {
                obj['exempt'] = ApiClient.convertToType(data['exempt'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * The status of this attempt.   | Type      | Description  | --------- | --------- | | NotAttempted | none of the students in a group has submitted an attempt; applies only to group assessments | | Abandoned |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. | | InProgress | attempt activity has commenced, but has not been submitted for grading | | Suspended |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. | | Canceled |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. | | NeedsGrading | attempt has been submitted for grading, but has not been fully graded | | Completed | a grade has been entered for the attempt | | InProgressAgain | attempt has been graded, but more student activity occurred after the grade was entered; applies only to collaborative tools such as discussions | | NeedsGradingAgain | additional student activity occurring after a grade was entered requires that the attempt be regraded; applies only to collaborative tools such as discussions | 
    * @member {module:model/Body29.StatusEnum} status
    */
    'status' = undefined;
    /**
    * The text grade associated with this attempt.
    * @member {String} text
    */
    'text' = undefined;
    /**
    * The score associated with this attempt.
    * @member {Number} score
    */
    'score' = undefined;
    /**
    * The reconciliation mode to use when reconciling the attempt grade.  When modifying reconciliationMode, score is also required.  A new score will not be calculated based on the reconciliationMode  **Since**: 3700.2.0   | Type      | Description  | --------- | --------- | | Average |  | | Highest |  | | Lowest |  | | Custom |  | 
    * @member {module:model/Body29.ReconciliationModeEnum} reconciliationMode
    */
    'reconciliationMode' = undefined;
    /**
    * The instructor notes associated with this attempt.
    * @member {String} notes
    */
    'notes' = undefined;
    /**
    * The instructor feedback associated with this attempt.
    * @member {String} feedback
    */
    'feedback' = undefined;
    /**
    * The student comments associated with this attempt.
    * @member {String} studentComments
    */
    'studentComments' = undefined;
    /**
    * The student submission text associated with this attempt.
    * @member {String} studentSubmission
    */
    'studentSubmission' = undefined;
    /**
    * Whether the score associated with this attempt is ignored when computing the user's grade for the associated grade column.
    * @member {Boolean} exempt
    */
    'exempt' = undefined;



    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "NotAttempted"
         * @const
         */
        "NotAttempted": "NotAttempted",
        /**
         * value: "Abandoned"
         * @const
         */
        "Abandoned": "Abandoned",
        /**
         * value: "InProgress"
         * @const
         */
        "InProgress": "InProgress",
        /**
         * value: "Suspended"
         * @const
         */
        "Suspended": "Suspended",
        /**
         * value: "Canceled"
         * @const
         */
        "Canceled": "Canceled",
        /**
         * value: "NeedsGrading"
         * @const
         */
        "NeedsGrading": "NeedsGrading",
        /**
         * value: "Completed"
         * @const
         */
        "Completed": "Completed",
        /**
         * value: "InProgressAgain"
         * @const
         */
        "InProgressAgain": "InProgressAgain",
        /**
         * value: "NeedsGradingAgain"
         * @const
         */
        "NeedsGradingAgain": "NeedsGradingAgain"    };
    /**
    * Allowed values for the <code>reconciliationMode</code> property.
    * @enum {String}
    * @readonly
    */
    static ReconciliationModeEnum = {
        /**
         * value: "Average"
         * @const
         */
        "Average": "Average",
        /**
         * value: "Highest"
         * @const
         */
        "Highest": "Highest",
        /**
         * value: "Lowest"
         * @const
         */
        "Lowest": "Lowest",
        /**
         * value: "Custom"
         * @const
         */
        "Custom": "Custom"    };

}
