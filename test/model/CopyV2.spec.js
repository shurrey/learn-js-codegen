/**
 * Learn APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3900.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LearnApIs);
  }
}(this, function(expect, LearnApIs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LearnApIs.CopyV2();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CopyV2', function() {
    it('should create an instance of CopyV2', function() {
      // uncomment below and update the code to test CopyV2
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be.a(LearnApIs.CopyV2);
    });

    it('should have the property adaptiveReleaseRules (base name: "adaptiveReleaseRules")', function() {
      // uncomment below and update the code to test the property adaptiveReleaseRules
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property announcements (base name: "announcements")', function() {
      // uncomment below and update the code to test the property announcements
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property assessments (base name: "assessments")', function() {
      // uncomment below and update the code to test the property assessments
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property blogs (base name: "blogs")', function() {
      // uncomment below and update the code to test the property blogs
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property calendar (base name: "calendar")', function() {
      // uncomment below and update the code to test the property calendar
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property contacts (base name: "contacts")', function() {
      // uncomment below and update the code to test the property contacts
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property contentAlignments (base name: "contentAlignments")', function() {
      // uncomment below and update the code to test the property contentAlignments
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property contentAreas (base name: "contentAreas")', function() {
      // uncomment below and update the code to test the property contentAreas
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property discussions (base name: "discussions")', function() {
      // uncomment below and update the code to test the property discussions
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property glossary (base name: "glossary")', function() {
      // uncomment below and update the code to test the property glossary
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property gradebook (base name: "gradebook")', function() {
      // uncomment below and update the code to test the property gradebook
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property groupSettings (base name: "groupSettings")', function() {
      // uncomment below and update the code to test the property groupSettings
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property journals (base name: "journals")', function() {
      // uncomment below and update the code to test the property journals
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property retentionRules (base name: "retentionRules")', function() {
      // uncomment below and update the code to test the property retentionRules
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property rubrics (base name: "rubrics")', function() {
      // uncomment below and update the code to test the property rubrics
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property settings (base name: "settings")', function() {
      // uncomment below and update the code to test the property settings
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property tasks (base name: "tasks")', function() {
      // uncomment below and update the code to test the property tasks
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

    it('should have the property wikis (base name: "wikis")', function() {
      // uncomment below and update the code to test the property wikis
      //var instane = new LearnApIs.CopyV2();
      //expect(instance).to.be();
    });

  });

}));
